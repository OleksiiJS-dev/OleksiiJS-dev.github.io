{"ast":null,"code":"const addNewUser = async (req, res) => {\n  const isTelegramMessage = req.body && req.body.message && req.body.message.chat && req.body.message.chat.id;\n\n  if (isTelegramMessage) {\n    const chat_id = req.body.message.chat.id;\n    const message = req.body.message.text;\n    const from = req.body.message.from;\n\n    if (message === '/start') {\n      return res.status(200).send({\n        method: 'sendMessage',\n        chat_id,\n        text: 'Добро пожаловать! Введите команду-пароль'\n      });\n    }\n\n    const url = `${process.env.NEXT_PUBLIC_COCKPIT_URL}api/collections/save/BotUsers`;\n\n    if (message === '/blind_orders') {\n      try {\n        const response = await fetch(url, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${process.env.NEXT_PUBLIC_COCKPIT_TOKEN}`\n          },\n          body: JSON.stringify({\n            data: {\n              chatId: `${chat_id}`,\n              nickname: `${(from === null || from === void 0 ? void 0 : from.first_name) || ''} ${(from === null || from === void 0 ? void 0 : from.last_name) || ''}`\n            }\n          })\n        });\n\n        if (!response.ok) {\n          return res.status(200).send({\n            method: 'sendMessage',\n            chat_id,\n            text: `Что то пошло не так при добавлении этого чата ${chat_id}`\n          });\n        }\n\n        return res.status(200).send({\n          method: 'sendMessage',\n          chat_id,\n          text: 'Вы успешно авторизованы'\n        });\n      } catch (err) {\n        return res.status(200).send({\n          method: 'sendMessage',\n          chat_id,\n          text: `Что то пошло не так при добавлении этого чата ${chat_id}`\n        });\n      }\n    }\n\n    return res.status(200).send({});\n  }\n};\n\nconst createBotUser = async (req, res) => addNewUser(req, res);\n\nexport default createBotUser;","map":null,"metadata":{},"sourceType":"module"}