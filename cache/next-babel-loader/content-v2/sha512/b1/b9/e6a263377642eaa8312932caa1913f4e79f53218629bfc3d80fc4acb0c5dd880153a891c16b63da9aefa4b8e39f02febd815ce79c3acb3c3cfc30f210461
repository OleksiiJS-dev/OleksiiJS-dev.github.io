{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useMemo, useEffect, useState, useRef } from 'react';\nimport { useFormik } from 'formik';\nimport { useRouter } from 'next/router';\nimport InputMask from 'react-input-mask';\nimport intlTelInput from 'intl-tel-input';\nimport Fuse from 'fuse.js';\nimport Button from '../Button/Button';\nimport Dropdown from './Dropdown';\nimport { FORM } from '../../constants/form';\nimport warehouses from '../../../npWarehouses.json';\n\nvar Form = function Form(_ref) {\n  var formikConfig = _ref.formikConfig,\n      types = _ref.types,\n      selectOptions = _ref.selectOptions,\n      placeholders = _ref.placeholders,\n      suffixes = _ref.suffixes,\n      masks = _ref.masks,\n      checkboxText = _ref.checkboxText,\n      buttonTitle = _ref.buttonTitle,\n      optionFields = _ref.optionFields,\n      deliveryChangeHandler = _ref.deliveryChangeHandler;\n  var formik = useFormik(formikConfig);\n\n  var _useRouter = useRouter(),\n      locale = _useRouter.locale;\n\n  var phoneRef = useRef(null);\n\n  var _useState = useState(),\n      mask = _useState[0],\n      setMask = _useState[1];\n\n  useEffect(function () {\n    if (formik.values.phone !== undefined) {\n      setMask(intlTelInput(phoneRef.current, {\n        separateDialCode: true,\n        initialCountry: 'ua',\n        preferredCountries: ['ua', 'ru', 'kz', 'us', 'il', 'ae', 'by'],\n        excludeCountries: ['ru', 'by']\n      }));\n    }\n  }, [phoneRef]);\n  useEffect(function () {\n    formik.setValues(formikConfig.initialValues);\n  }, [formikConfig]);\n  var inputWarehouse = useMemo(function () {\n    var options = {\n      includeScore: true,\n      keys: ['settlement']\n    };\n    var fuse = new Fuse(warehouses, options);\n    var currentWarehouses = fuse.search(formik.values['city'] || '');\n\n    if (locale === 'en' || !currentWarehouses.length) {\n      var handleBlur = function handleBlur(e) {\n        e.target.value = e.target.value.trim();\n        formik.handleBlur(e);\n        formik.handleChange(e);\n      };\n\n      var InputText = function InputText(key) {\n        return /*#__PURE__*/_jsxs(\"div\", {\n          className: \"input-box\",\n          children: [/*#__PURE__*/_jsx(\"input\", {\n            type: \"text\",\n            id: key,\n            name: key,\n            value: formik.values[key],\n            placeholder: placeholders[key],\n            onChange: formik.handleChange,\n            onBlur: handleBlur,\n            onFocus: function onFocus() {\n              return formik.touched[key] = undefined;\n            }\n          }), !!suffixes && suffixes[key] && /*#__PURE__*/_jsx(\"span\", {\n            className: \"input-suffix\",\n            children: suffixes[key]\n          })]\n        });\n      };\n\n      return InputText;\n    }\n\n    var InputField = function InputField(key) {\n      return /*#__PURE__*/_jsx(\"div\", {\n        className: \"input-select\",\n        children: /*#__PURE__*/_jsx(Dropdown, {\n          value: formik.values[key],\n          placeholder: placeholders[key],\n          values: currentWarehouses.map(function (_ref2) {\n            var address = _ref2.item.address;\n            return address;\n          }),\n          setValue: function setValue(item) {\n            return formik.setFieldValue(key, item);\n          }\n        })\n      });\n    };\n\n    return InputField;\n  }, [formik, placeholders, locale]);\n  var inputText = useMemo(function () {\n    var handleBlur = function handleBlur(e) {\n      e.target.value = e.target.value.trim();\n      formik.handleBlur(e);\n      formik.handleChange(e);\n    };\n\n    var InputField = function InputField(key) {\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: \"input-box\",\n        children: [/*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          id: key,\n          name: key,\n          value: formik.values[key],\n          placeholder: placeholders[key],\n          onChange: formik.handleChange,\n          onBlur: handleBlur,\n          onFocus: function onFocus() {\n            return formik.touched[key] = undefined;\n          }\n        }), !!suffixes && suffixes[key] && /*#__PURE__*/_jsx(\"span\", {\n          className: \"input-suffix\",\n          children: suffixes[key]\n        })]\n      });\n    };\n\n    return InputField;\n  }, [formik, placeholders, suffixes]);\n  var inputTextWithMask = useMemo(function () {\n    var InputField = function InputField(key) {\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: \"input-box\",\n        children: [/*#__PURE__*/_jsx(InputMask, {\n          type: \"text\",\n          id: key,\n          name: key,\n          value: formik.values[key],\n          placeholder: placeholders[key],\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          onFocus: function onFocus() {\n            return formik.touched[key] = undefined;\n          },\n          mask: masks ? masks[key] : ''\n        }), !!suffixes && suffixes[key] && /*#__PURE__*/_jsx(\"span\", {\n          className: \"input-suffix\",\n          children: suffixes[key]\n        })]\n      });\n    };\n\n    return InputField;\n  }, [formik, masks, placeholders, suffixes]);\n  var inputTextArea = useMemo(function () {\n    var InputField = function InputField(key) {\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: \"input-area\",\n        children: [/*#__PURE__*/_jsx(\"textarea\", {\n          id: key,\n          name: key,\n          value: formik.values[key],\n          placeholder: placeholders[key],\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          onFocus: function onFocus() {\n            return formik.touched[key] = undefined;\n          }\n        }), !!suffixes && suffixes[key] && /*#__PURE__*/_jsx(\"span\", {\n          className: \"input-suffix\",\n          children: suffixes[key]\n        })]\n      });\n    };\n\n    return InputField;\n  }, [formik, placeholders, suffixes]);\n  var inputCheckbox = useMemo(function () {\n    var InputField = function InputField(key) {\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: \"input-checkbox\",\n        children: [/*#__PURE__*/_jsx(\"input\", {\n          className: \"checkbox\",\n          type: \"checkbox\",\n          id: key,\n          name: key,\n          value: formik.values[key],\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          onFocus: function onFocus() {\n            return formik.touched[key] = undefined;\n          }\n        }), /*#__PURE__*/_jsx(\"label\", {\n          className: \"input-checkbox__label\",\n          htmlFor: key,\n          children: checkboxText\n        })]\n      });\n    };\n\n    return InputField;\n  }, [formik, checkboxText]);\n  var inputDelivery = useMemo(function () {\n    function deliverySetValue(item, key) {\n      formik.setFieldValue(key, item);\n      if (deliveryChangeHandler) deliveryChangeHandler(item);\n    }\n\n    var InputField = function InputField(key) {\n      return /*#__PURE__*/_jsx(\"div\", {\n        className: \"input-select\",\n        children: /*#__PURE__*/_jsx(Dropdown, {\n          value: formik.values[key],\n          placeholder: placeholders[key],\n          values: [FORM[locale].novaPoshta, FORM[locale].ukrPoshta, FORM[locale].courierNovaPoshta],\n          setValue: function setValue(item) {\n            return deliverySetValue(item, key);\n          }\n        })\n      });\n    };\n\n    return InputField;\n  }, [formik, placeholders, selectOptions]);\n  var inputSelect = useMemo(function () {\n    var InputField = function InputField(key) {\n      return /*#__PURE__*/_jsx(\"div\", {\n        className: \"input-select\",\n        children: /*#__PURE__*/_jsx(Dropdown, {\n          value: formik.values[key],\n          placeholder: placeholders[key],\n          values: selectOptions ? selectOptions[key] : [],\n          setValue: function setValue(item) {\n            return formik.setFieldValue(key, item);\n          }\n        })\n      });\n    };\n\n    return InputField;\n  }, [formik, placeholders, selectOptions]);\n  var inputPhone = useMemo(function () {\n    var InputField = function InputField(key) {\n      return /*#__PURE__*/_jsxs(\"div\", {\n        className: \"input-box\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"phone-mask-container\",\n          children: /*#__PURE__*/_jsx(\"input\", {\n            type: \"text\",\n            id: key,\n            name: key,\n            ref: phoneRef,\n            value: formik.values[key],\n            placeholder: placeholders[key],\n            onChange: function onChange(e) {\n              if (e.target.value.length < 11 && e.target.value.match(/^\\d+$/) || e.target.value.match(/[+]\\d+$/) && e.target.value.length < 15) {\n                formik.handleChange(e);\n              }\n            }\n          })\n        }), !!suffixes && suffixes[key] && /*#__PURE__*/_jsx(\"span\", {\n          className: \"input-suffix\",\n          children: suffixes[key]\n        })]\n      });\n    };\n\n    return InputField;\n  }, [formik, placeholders, suffixes]);\n  var inputDate = useMemo(function () {\n    var InputField = function InputField(key) {\n      return /*#__PURE__*/_jsx(\"div\", {\n        className: \"input-date\",\n        children: /*#__PURE__*/_jsx(\"input\", {\n          type: \"text\",\n          id: key,\n          name: key,\n          value: formik.values[key],\n          placeholder: placeholders[key],\n          onChange: formik.handleChange,\n          onFocus: function onFocus(e) {\n            e.currentTarget.type = 'date';\n          },\n          onBlur: function onBlur(e) {\n            e.currentTarget.type = 'text';\n          }\n        })\n      });\n    };\n\n    return InputField;\n  }, [formik, placeholders, selectOptions]);\n\n  var renderField = function renderField(key, idx) {\n    return /*#__PURE__*/_jsxs(\"div\", {\n      className: \"form-row\",\n      children: [types[key] !== 'text' || !masks || masks && !masks[key] ? InputTypes[types[key]](key) : InputTypes.maskedText(key), formik.errors[key] && formik.touched[key] && /*#__PURE__*/_jsx(\"p\", {\n        className: \"error\",\n        children: formik.errors[key]\n      })]\n    }, idx);\n  };\n\n  var InputTypes = {\n    text: inputText,\n    select: inputSelect,\n    checkbox: inputCheckbox,\n    phone: inputPhone,\n    maskedText: inputTextWithMask,\n    textArea: inputTextArea,\n    warehouse: inputWarehouse,\n    delivery: inputDelivery,\n    date: inputDate\n  };\n\n  var findOptionField = function findOptionField(key) {\n    return optionFields === null || optionFields === void 0 ? void 0 : optionFields.find(function (_ref3) {\n      var fieldName = _ref3.fieldName;\n      return key === fieldName;\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(\"form\", {\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n    },\n    children: [Object.keys(formik.values).map(function (key, idx) {\n      var optionField = findOptionField(key);\n\n      if ((optionField === null || optionField === void 0 ? void 0 : optionField.dependFieldValue) === formik.values[optionField === null || optionField === void 0 ? void 0 : optionField.dependFieldName] || !optionField) {\n        return renderField(key, idx);\n      }\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: 'button-container',\n      children: /*#__PURE__*/_jsx(Button, {\n        title: buttonTitle,\n        callback: function callback() {\n          if (formik.values.phone === undefined) return formik.handleSubmit();\n\n          if (formik.values.phone.length > 8 && formik.values.phone.length < 11) {\n            formik.values.phone = \"+\".concat(mask.getSelectedCountryData().dialCode).concat(formik.values.phone);\n          }\n\n          if (formik.values.phone.length < 15) formik.handleSubmit();\n        },\n        type: \"button\"\n      })\n    })]\n  });\n};\n\nexport default Form;","map":null,"metadata":{},"sourceType":"module"}