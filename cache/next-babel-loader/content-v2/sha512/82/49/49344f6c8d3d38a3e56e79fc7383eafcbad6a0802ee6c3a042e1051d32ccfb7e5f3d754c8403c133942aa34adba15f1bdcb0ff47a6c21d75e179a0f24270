{"ast":null,"code":"import * as Yup from 'yup';\nimport 'yup/lib/Condition';\nimport { TRANSLATE } from './languages';\nexport var FORM = {\n  ru: {\n    cm: 'см',\n    tooSmall: 'cлишком малое значение',\n    tooLarge: 'cлишком большое значение',\n    required: 'обязательное поле',\n    wrongInput: 'неверное значение',\n    lettersRequired: 'некорректный ввод',\n    firstName: 'Имя',\n    lastName: 'Фамилия',\n    email: 'Электронная почта',\n    phone: '000000000',\n    country: 'Страна',\n    city: 'Город',\n    street: 'Улица',\n    house: 'Дом',\n    flat: 'Квартира',\n    paymentMethod: 'Способ оплаты',\n    paymentOnline: 'Оплата онлайн',\n    paymentManager: 'Оплата через менеджера',\n    novaPoshta: '\"Нова Пошта\"(по Украине)',\n    ukrPoshta: '\"Укр Пошта\"(за границу)',\n    courierNovaPoshta: 'Курьером \"Нова Пошта\"',\n    delivery: 'Доставка',\n    receiverName: 'Имя получателя',\n    receiverEmail: 'Почта получателя',\n    yourName: 'Ваше имя',\n    yourEmail: 'Ваша почта',\n    giftMessage: 'Сообщение (необязательно)',\n    giftAmount: 'Введите любую сумму сертификата',\n    warehouse: 'Отделение',\n    dob: 'Дата рождения',\n    russia: 'Извините, мы не доставляем наши товары в Россию'\n  },\n  en: {\n    cm: 'cm',\n    tooSmall: 'too small value',\n    tooLarge: 'too large value',\n    required: 'required',\n    wrongInput: 'wrong input',\n    lettersRequired: 'letters required',\n    firstName: 'First name',\n    lastName: 'Last name',\n    email: 'Email',\n    phone: '000000000',\n    country: 'Country',\n    city: 'City',\n    street: 'Street',\n    house: 'House',\n    flat: 'Flat',\n    paymentMethod: 'Payment method',\n    paymentOnline: 'Online payment',\n    delivery: 'Delivery',\n    paymentManager: 'Payment with manager',\n    novaPoshta: '\"Nova Poshta\"(in Ukraine)',\n    ukrPoshta: '\"Urk Poshta\"(abroad)',\n    courierNovaPoshta: 'Courier \"Nova Poshta\"',\n    receiverName: 'Receiver name',\n    receiverEmail: 'Receiver email',\n    yourName: 'Your name',\n    yourEmail: 'Your email',\n    giftMessage: 'Message (optional)',\n    giftAmount: 'Enter any amount of the certificate',\n    warehouse: 'Warehouse',\n    dob: 'Date of birth',\n    russia: \"Sorry, we don't deliver our goods to Russia\"\n  }\n};\nexport var FORMIK = {\n  shippingDiscount: {\n    values: {\n      code: ''\n    }\n  },\n  shippingMain: {\n    values: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      country: '',\n      city: '',\n      paymentMethod: '',\n      deliveryMethod: '',\n      warehouse: '',\n      street: '',\n      house: '',\n      flat: '',\n      checkbox: false\n    },\n    validationSchema: function validationSchema(locale) {\n      return Yup.object({\n        firstName: Yup.string().matches(/^[ a-zA-Zа-яА-Я]+$/, FORM[locale].lettersRequired).required(FORM[locale].required),\n        lastName: Yup.string().matches(/^[ a-zA-Zа-яА-Я]+$/, FORM[locale].lettersRequired).required(FORM[locale].required),\n        email: Yup.string().email(FORM[locale].wrongInput).required(FORM[locale].required),\n        phone: Yup.string().required(FORM[locale].required).min(11, FORM[locale].wrongInput).max(15, FORM[locale].wrongInput).typeError(FORM[locale].wrongInput),\n        country: Yup.string().matches(/^(?!ru[s\\u017F][s\\u017F]ia|\\u0440\\u043E\\u0441\\u0441\\u0438\\u044F|\\u0440\\u0444|rf|\\u0440\\u043E\\u0441\\u0441\\u0438\\u0439\\u0441\\u043A\\u0430\\u044F[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]\\u0444\\u0435\\u0434\\u0435\\u0440\\u0430\\u0446\\u0438\\u044F)(?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*$/gi, FORM[locale].russia).required(FORM[locale].required),\n        city: Yup.string().required(FORM[locale].required),\n        paymentMethod: Yup.string().required(FORM[locale].required),\n        deliveryMethod: Yup.string().required(FORM[locale].required),\n        warehouse: Yup.string().when('deliveryMethod', {\n          is: FORM[locale].novaPoshta,\n          then: Yup.string().required(FORM[locale].required)\n        }),\n        street: Yup.string().when('deliveryMethod', {\n          is: FORM[locale].courierNovaPoshta,\n          then: Yup.string().required(FORM[locale].required)\n        }),\n        house: Yup.string().when('deliveryMethod', {\n          is: FORM[locale].courierNovaPoshta,\n          then: Yup.string().required(FORM[locale].required)\n        }),\n        flat: Yup.string()\n      });\n    },\n    types: {\n      firstName: 'text',\n      lastName: 'text',\n      email: 'text',\n      phone: 'phone',\n      country: 'text',\n      city: 'text',\n      paymentMethod: 'select',\n      deliveryMethod: 'delivery',\n      warehouse: 'warehouse',\n      street: 'text',\n      house: 'text',\n      flat: 'text',\n      checkbox: 'checkbox'\n    },\n    selectOptions: function selectOptions(locale) {\n      return {\n        paymentMethod: [FORM[locale].paymentOnline, FORM[locale].paymentManager]\n      };\n    },\n    placeholders: function placeholders(locale) {\n      return {\n        firstName: FORM[locale].firstName,\n        lastName: FORM[locale].lastName,\n        email: FORM[locale].email,\n        phone: FORM[locale].phone,\n        country: FORM[locale].country,\n        city: FORM[locale].city,\n        street: FORM[locale].street,\n        house: FORM[locale].house,\n        flat: FORM[locale].flat,\n        paymentMethod: FORM[locale].paymentMethod,\n        deliveryMethod: FORM[locale].delivery,\n        warehouse: FORM[locale].warehouse\n      };\n    }\n  },\n  goodsExclusive: {\n    values: {\n      growth: '',\n      bust: '',\n      waist: '',\n      hips: ''\n    },\n    validationSchema: function validationSchema(locale) {\n      return Yup.object({\n        growth: Yup.number().min(100, FORM[locale].tooSmall).max(300, FORM[locale].tooLarge).required(FORM[locale].required).typeError(FORM[locale].wrongInput),\n        bust: Yup.number().min(20, FORM[locale].tooSmall).max(200, FORM[locale].tooLarge).required(FORM[locale].required).typeError(FORM[locale].wrongInput),\n        waist: Yup.number().min(20, FORM[locale].tooSmall).max(200, FORM[locale].tooLarge).required(FORM[locale].required).typeError(FORM[locale].wrongInput),\n        hips: Yup.number().min(20, FORM[locale].tooSmall).max(200, FORM[locale].tooLarge).required(FORM[locale].required).typeError(FORM[locale].wrongInput)\n      });\n    },\n    types: {\n      growth: 'text',\n      bust: 'text',\n      waist: 'text',\n      hips: 'text'\n    },\n    suffixes: function suffixes(locale) {\n      return {\n        growth: TRANSLATE[locale].cm,\n        bust: TRANSLATE[locale].cm,\n        waist: TRANSLATE[locale].cm,\n        hips: TRANSLATE[locale].cm\n      };\n    },\n    placeholders: function placeholders(locale) {\n      return {\n        growth: TRANSLATE[locale].growth,\n        bust: TRANSLATE[locale].bustVolume,\n        waist: TRANSLATE[locale].waistVolume,\n        hips: TRANSLATE[locale].hipsVolume\n      };\n    }\n  },\n  footerForm: {\n    values: {\n      phone: ''\n    },\n    validationSchema: function validationSchema(locale) {\n      return Yup.object({\n        phone: Yup.string().min(11, FORM[locale].wrongInput).max(15, FORM[locale].wrongInput).typeError(FORM[locale].wrongInput)\n      });\n    },\n    types: {\n      phone: 'phone'\n    },\n    placeholders: function placeholders(locale) {\n      return {\n        phone: FORM[locale].phone\n      };\n    }\n  },\n  modalStartForm: {\n    values: {\n      firstName: '',\n      email: '',\n      phone: '',\n      dob: ''\n    },\n    validationSchema: function validationSchema(locale) {\n      return Yup.object({\n        firstName: Yup.string().matches(/^[ a-zA-Zа-яА-Я]+$/, FORM[locale].lettersRequired).typeError(FORM[locale].wrongInput).required(FORM[locale].required),\n        email: Yup.string().email().required(FORM[locale].required),\n        phone: Yup.string().required(FORM[locale].required).min(11, FORM[locale].wrongInput).max(15, FORM[locale].wrongInput).typeError(FORM[locale].wrongInput),\n        dob: Yup.date().required(FORM[locale].required).test('dob', FORM[locale].wrongInput, function (value) {\n          return value ? new Date().getFullYear() - (value === null || value === void 0 ? void 0 : value.getFullYear()) >= 10 : false;\n        })\n      });\n    },\n    types: {\n      firstName: 'text',\n      email: 'text',\n      phone: 'phone',\n      dob: 'date'\n    },\n    placeholders: function placeholders(locale) {\n      return {\n        firstName: FORM[locale].firstName,\n        email: FORM[locale].email,\n        phone: FORM[locale].phone,\n        dob: FORM[locale].dob\n      };\n    }\n  },\n  voucher: {\n    values: {\n      receiverName: '',\n      receiverEmail: '',\n      yourName: '',\n      yourEmail: '',\n      message: '',\n      price: ''\n    },\n    validationSchema: function validationSchema(locale) {\n      return Yup.object({\n        receiverName: Yup.string().matches(/^[ a-zA-Zа-яА-Я]+$/, FORM[locale].lettersRequired).typeError(FORM[locale].wrongInput).required(FORM[locale].required),\n        receiverEmail: Yup.string().email().required(FORM[locale].required),\n        yourName: Yup.string().matches(/^[ a-zA-Zа-яА-Я]+$/, FORM[locale].lettersRequired).typeError(FORM[locale].wrongInput).required(FORM[locale].required),\n        yourEmail: Yup.string().email().required(FORM[locale].required),\n        price: Yup.number().min(1, FORM[locale].tooSmall).required(FORM[locale].required).typeError(FORM[locale].wrongInput)\n      });\n    },\n    types: {\n      receiverName: 'text',\n      receiverEmail: 'text',\n      yourName: 'text',\n      yourEmail: 'text',\n      message: 'textArea',\n      price: 'text'\n    },\n    suffixes: {\n      price: 'UAH'\n    },\n    placeholders: function placeholders(locale) {\n      return {\n        receiverName: FORM[locale].receiverName,\n        receiverEmail: FORM[locale].receiverEmail,\n        yourName: FORM[locale].yourName,\n        yourEmail: FORM[locale].yourEmail,\n        message: FORM[locale].giftMessage,\n        price: FORM[locale].giftAmount\n      };\n    }\n  }\n};","map":{"version":3,"sources":["D:/archivegit/blind-blind/src/constants/form.ts"],"names":["Yup","TRANSLATE","FORM","ru","cm","tooSmall","tooLarge","required","wrongInput","lettersRequired","firstName","lastName","email","phone","country","city","street","house","flat","paymentMethod","paymentOnline","paymentManager","novaPoshta","ukrPoshta","courierNovaPoshta","delivery","receiverName","receiverEmail","yourName","yourEmail","giftMessage","giftAmount","warehouse","dob","russia","en","FORMIK","shippingDiscount","values","code","shippingMain","deliveryMethod","checkbox","validationSchema","locale","object","string","matches","min","max","typeError","when","is","then","types","selectOptions","placeholders","goodsExclusive","growth","bust","waist","hips","number","suffixes","bustVolume","waistVolume","hipsVolume","footerForm","modalStartForm","date","test","value","Date","getFullYear","voucher","message","price"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,OAAe,mBAAf;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAO,IAAMC,IAAI,GAAG;AAClBC,EAAAA,EAAE,EAAE;AACFC,IAAAA,EAAE,EAAE,IADF;AAEFC,IAAAA,QAAQ,EAAE,wBAFR;AAGFC,IAAAA,QAAQ,EAAE,0BAHR;AAIFC,IAAAA,QAAQ,EAAE,mBAJR;AAKFC,IAAAA,UAAU,EAAE,mBALV;AAMFC,IAAAA,eAAe,EAAE,mBANf;AAOFC,IAAAA,SAAS,EAAE,KAPT;AAQFC,IAAAA,QAAQ,EAAE,SARR;AASFC,IAAAA,KAAK,EAAE,mBATL;AAUFC,IAAAA,KAAK,EAAE,WAVL;AAWFC,IAAAA,OAAO,EAAE,QAXP;AAYFC,IAAAA,IAAI,EAAE,OAZJ;AAaFC,IAAAA,MAAM,EAAE,OAbN;AAcFC,IAAAA,KAAK,EAAE,KAdL;AAeFC,IAAAA,IAAI,EAAE,UAfJ;AAgBFC,IAAAA,aAAa,EAAE,eAhBb;AAiBFC,IAAAA,aAAa,EAAE,eAjBb;AAkBFC,IAAAA,cAAc,EAAE,wBAlBd;AAmBFC,IAAAA,UAAU,EAAE,0BAnBV;AAoBFC,IAAAA,SAAS,EAAE,yBApBT;AAqBFC,IAAAA,iBAAiB,EAAE,uBArBjB;AAsBFC,IAAAA,QAAQ,EAAE,UAtBR;AAuBFC,IAAAA,YAAY,EAAE,gBAvBZ;AAwBFC,IAAAA,aAAa,EAAE,kBAxBb;AAyBFC,IAAAA,QAAQ,EAAE,UAzBR;AA0BFC,IAAAA,SAAS,EAAE,YA1BT;AA2BFC,IAAAA,WAAW,EAAE,2BA3BX;AA4BFC,IAAAA,UAAU,EAAE,iCA5BV;AA6BFC,IAAAA,SAAS,EAAE,WA7BT;AA8BFC,IAAAA,GAAG,EAAE,eA9BH;AA+BFC,IAAAA,MAAM,EAAE;AA/BN,GADc;AAkClBC,EAAAA,EAAE,EAAE;AACF/B,IAAAA,EAAE,EAAE,IADF;AAEFC,IAAAA,QAAQ,EAAE,iBAFR;AAGFC,IAAAA,QAAQ,EAAE,iBAHR;AAIFC,IAAAA,QAAQ,EAAE,UAJR;AAKFC,IAAAA,UAAU,EAAE,aALV;AAMFC,IAAAA,eAAe,EAAE,kBANf;AAOFC,IAAAA,SAAS,EAAE,YAPT;AAQFC,IAAAA,QAAQ,EAAE,WARR;AASFC,IAAAA,KAAK,EAAE,OATL;AAUFC,IAAAA,KAAK,EAAE,WAVL;AAWFC,IAAAA,OAAO,EAAE,SAXP;AAYFC,IAAAA,IAAI,EAAE,MAZJ;AAaFC,IAAAA,MAAM,EAAE,QAbN;AAcFC,IAAAA,KAAK,EAAE,OAdL;AAeFC,IAAAA,IAAI,EAAE,MAfJ;AAgBFC,IAAAA,aAAa,EAAE,gBAhBb;AAiBFC,IAAAA,aAAa,EAAE,gBAjBb;AAkBFK,IAAAA,QAAQ,EAAE,UAlBR;AAmBFJ,IAAAA,cAAc,EAAE,sBAnBd;AAoBFC,IAAAA,UAAU,EAAE,2BApBV;AAqBFC,IAAAA,SAAS,EAAE,sBArBT;AAsBFC,IAAAA,iBAAiB,EAAE,uBAtBjB;AAuBFE,IAAAA,YAAY,EAAE,eAvBZ;AAwBFC,IAAAA,aAAa,EAAE,gBAxBb;AAyBFC,IAAAA,QAAQ,EAAE,WAzBR;AA0BFC,IAAAA,SAAS,EAAE,YA1BT;AA2BFC,IAAAA,WAAW,EAAE,oBA3BX;AA4BFC,IAAAA,UAAU,EAAE,qCA5BV;AA6BFC,IAAAA,SAAS,EAAE,WA7BT;AA8BFC,IAAAA,GAAG,EAAE,eA9BH;AA+BFC,IAAAA,MAAM,EAAE;AA/BN;AAlCc,CAAb;AAqEP,OAAO,IAAME,MAAM,GAAG;AACpBC,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAE;AADA;AADQ,GADE;AAMpBC,EAAAA,YAAY,EAAE;AACZF,IAAAA,MAAM,EAAE;AACN5B,MAAAA,SAAS,EAAE,EADL;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,KAAK,EAAE,EAHD;AAINC,MAAAA,KAAK,EAAE,EAJD;AAKNC,MAAAA,OAAO,EAAE,EALH;AAMNC,MAAAA,IAAI,EAAE,EANA;AAONI,MAAAA,aAAa,EAAE,EAPT;AAQNsB,MAAAA,cAAc,EAAE,EARV;AASNT,MAAAA,SAAS,EAAE,EATL;AAUNhB,MAAAA,MAAM,EAAE,EAVF;AAWNC,MAAAA,KAAK,EAAE,EAXD;AAYNC,MAAAA,IAAI,EAAE,EAZA;AAaNwB,MAAAA,QAAQ,EAAE;AAbJ,KADI;AAgBZC,IAAAA,gBAAgB,EAAE,0BAACC,MAAD;AAAA,aAChB5C,GAAG,CAAC6C,MAAJ,CAAW;AACTnC,QAAAA,SAAS,EAAEV,GAAG,CAAC8C,MAAJ,GACRC,OADQ,CACA,oBADA,EACsB7C,IAAI,CAAC0C,MAAD,CAAJ,CAAanC,eADnC,EAERF,QAFQ,CAECL,IAAI,CAAC0C,MAAD,CAAJ,CAAarC,QAFd,CADF;AAITI,QAAAA,QAAQ,EAAEX,GAAG,CAAC8C,MAAJ,GACPC,OADO,CACC,oBADD,EACuB7C,IAAI,CAAC0C,MAAD,CAAJ,CAAanC,eADpC,EAEPF,QAFO,CAEEL,IAAI,CAAC0C,MAAD,CAAJ,CAAarC,QAFf,CAJD;AAOTK,QAAAA,KAAK,EAAEZ,GAAG,CAAC8C,MAAJ,GACJlC,KADI,CACEV,IAAI,CAAC0C,MAAD,CAAJ,CAAapC,UADf,EAEJD,QAFI,CAEKL,IAAI,CAAC0C,MAAD,CAAJ,CAAarC,QAFlB,CAPE;AAUTM,QAAAA,KAAK,EAAEb,GAAG,CAAC8C,MAAJ,GACJvC,QADI,CACKL,IAAI,CAAC0C,MAAD,CAAJ,CAAarC,QADlB,EAEJyC,GAFI,CAEA,EAFA,EAEI9C,IAAI,CAAC0C,MAAD,CAAJ,CAAapC,UAFjB,EAGJyC,GAHI,CAGA,EAHA,EAGI/C,IAAI,CAAC0C,MAAD,CAAJ,CAAapC,UAHjB,EAIJ0C,SAJI,CAIMhD,IAAI,CAAC0C,MAAD,CAAJ,CAAapC,UAJnB,CAVE;AAeTM,QAAAA,OAAO,EAAEd,GAAG,CAAC8C,MAAJ,GACNC,OADM,CAEL,0aAFK,EAGL7C,IAAI,CAAC0C,MAAD,CAAJ,CAAaV,MAHR,EAKN3B,QALM,CAKGL,IAAI,CAAC0C,MAAD,CAAJ,CAAarC,QALhB,CAfA;AAqBTQ,QAAAA,IAAI,EAAEf,GAAG,CAAC8C,MAAJ,GAAavC,QAAb,CAAsBL,IAAI,CAAC0C,MAAD,CAAJ,CAAarC,QAAnC,CArBG;AAsBTY,QAAAA,aAAa,EAAEnB,GAAG,CAAC8C,MAAJ,GAAavC,QAAb,CAAsBL,IAAI,CAAC0C,MAAD,CAAJ,CAAarC,QAAnC,CAtBN;AAuBTkC,QAAAA,cAAc,EAAEzC,GAAG,CAAC8C,MAAJ,GAAavC,QAAb,CAAsBL,IAAI,CAAC0C,MAAD,CAAJ,CAAarC,QAAnC,CAvBP;AAwBTyB,QAAAA,SAAS,EAAEhC,GAAG,CAAC8C,MAAJ,GAAaK,IAAb,CAAkB,gBAAlB,EAAoC;AAC7CC,UAAAA,EAAE,EAAElD,IAAI,CAAC0C,MAAD,CAAJ,CAAatB,UAD4B;AAE7C+B,UAAAA,IAAI,EAAErD,GAAG,CAAC8C,MAAJ,GAAavC,QAAb,CAAsBL,IAAI,CAAC0C,MAAD,CAAJ,CAAarC,QAAnC;AAFuC,SAApC,CAxBF;AA4BTS,QAAAA,MAAM,EAAEhB,GAAG,CAAC8C,MAAJ,GAAaK,IAAb,CAAkB,gBAAlB,EAAoC;AAC1CC,UAAAA,EAAE,EAAElD,IAAI,CAAC0C,MAAD,CAAJ,CAAapB,iBADyB;AAE1C6B,UAAAA,IAAI,EAAErD,GAAG,CAAC8C,MAAJ,GAAavC,QAAb,CAAsBL,IAAI,CAAC0C,MAAD,CAAJ,CAAarC,QAAnC;AAFoC,SAApC,CA5BC;AAgCTU,QAAAA,KAAK,EAAEjB,GAAG,CAAC8C,MAAJ,GAAaK,IAAb,CAAkB,gBAAlB,EAAoC;AACzCC,UAAAA,EAAE,EAAElD,IAAI,CAAC0C,MAAD,CAAJ,CAAapB,iBADwB;AAEzC6B,UAAAA,IAAI,EAAErD,GAAG,CAAC8C,MAAJ,GAAavC,QAAb,CAAsBL,IAAI,CAAC0C,MAAD,CAAJ,CAAarC,QAAnC;AAFmC,SAApC,CAhCE;AAoCTW,QAAAA,IAAI,EAAElB,GAAG,CAAC8C,MAAJ;AApCG,OAAX,CADgB;AAAA,KAhBN;AAuDZQ,IAAAA,KAAK,EAAE;AACL5C,MAAAA,SAAS,EAAE,MADN;AAELC,MAAAA,QAAQ,EAAE,MAFL;AAGLC,MAAAA,KAAK,EAAE,MAHF;AAILC,MAAAA,KAAK,EAAE,OAJF;AAKLC,MAAAA,OAAO,EAAE,MALJ;AAMLC,MAAAA,IAAI,EAAE,MAND;AAOLI,MAAAA,aAAa,EAAE,QAPV;AAQLsB,MAAAA,cAAc,EAAE,UARX;AASLT,MAAAA,SAAS,EAAE,WATN;AAULhB,MAAAA,MAAM,EAAE,MAVH;AAWLC,MAAAA,KAAK,EAAE,MAXF;AAYLC,MAAAA,IAAI,EAAE,MAZD;AAaLwB,MAAAA,QAAQ,EAAE;AAbL,KAvDK;AAsEZa,IAAAA,aAAa,EAAE,uBAACX,MAAD;AAAA,aAA0B;AACvCzB,QAAAA,aAAa,EAAE,CAACjB,IAAI,CAAC0C,MAAD,CAAJ,CAAaxB,aAAd,EAA6BlB,IAAI,CAAC0C,MAAD,CAAJ,CAAavB,cAA1C;AADwB,OAA1B;AAAA,KAtEH;AAyEZmC,IAAAA,YAAY,EAAE,sBAACZ,MAAD;AAAA,aAA0B;AACtClC,QAAAA,SAAS,EAAER,IAAI,CAAC0C,MAAD,CAAJ,CAAalC,SADc;AAEtCC,QAAAA,QAAQ,EAAET,IAAI,CAAC0C,MAAD,CAAJ,CAAajC,QAFe;AAGtCC,QAAAA,KAAK,EAAEV,IAAI,CAAC0C,MAAD,CAAJ,CAAahC,KAHkB;AAItCC,QAAAA,KAAK,EAAEX,IAAI,CAAC0C,MAAD,CAAJ,CAAa/B,KAJkB;AAKtCC,QAAAA,OAAO,EAAEZ,IAAI,CAAC0C,MAAD,CAAJ,CAAa9B,OALgB;AAMtCC,QAAAA,IAAI,EAAEb,IAAI,CAAC0C,MAAD,CAAJ,CAAa7B,IANmB;AAOtCC,QAAAA,MAAM,EAAEd,IAAI,CAAC0C,MAAD,CAAJ,CAAa5B,MAPiB;AAQtCC,QAAAA,KAAK,EAAEf,IAAI,CAAC0C,MAAD,CAAJ,CAAa3B,KARkB;AAStCC,QAAAA,IAAI,EAAEhB,IAAI,CAAC0C,MAAD,CAAJ,CAAa1B,IATmB;AAUtCC,QAAAA,aAAa,EAAEjB,IAAI,CAAC0C,MAAD,CAAJ,CAAazB,aAVU;AAWtCsB,QAAAA,cAAc,EAAEvC,IAAI,CAAC0C,MAAD,CAAJ,CAAanB,QAXS;AAYtCO,QAAAA,SAAS,EAAE9B,IAAI,CAAC0C,MAAD,CAAJ,CAAaZ;AAZc,OAA1B;AAAA;AAzEF,GANM;AA8FpByB,EAAAA,cAAc,EAAE;AACdnB,IAAAA,MAAM,EAAE;AACNoB,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,KAAK,EAAE,EAHD;AAINC,MAAAA,IAAI,EAAE;AAJA,KADM;AAOdlB,IAAAA,gBAAgB,EAAE,0BAACC,MAAD;AAAA,aAChB5C,GAAG,CAAC6C,MAAJ,CAAW;AACTa,QAAAA,MAAM,EAAE1D,GAAG,CAAC8D,MAAJ,GACLd,GADK,CACD,GADC,EACI9C,IAAI,CAAC0C,MAAD,CAAJ,CAAavC,QADjB,EAEL4C,GAFK,CAED,GAFC,EAEI/C,IAAI,CAAC0C,MAAD,CAAJ,CAAatC,QAFjB,EAGLC,QAHK,CAGIL,IAAI,CAAC0C,MAAD,CAAJ,CAAarC,QAHjB,EAIL2C,SAJK,CAIKhD,IAAI,CAAC0C,MAAD,CAAJ,CAAapC,UAJlB,CADC;AAMTmD,QAAAA,IAAI,EAAE3D,GAAG,CAAC8D,MAAJ,GACHd,GADG,CACC,EADD,EACK9C,IAAI,CAAC0C,MAAD,CAAJ,CAAavC,QADlB,EAEH4C,GAFG,CAEC,GAFD,EAEM/C,IAAI,CAAC0C,MAAD,CAAJ,CAAatC,QAFnB,EAGHC,QAHG,CAGML,IAAI,CAAC0C,MAAD,CAAJ,CAAarC,QAHnB,EAIH2C,SAJG,CAIOhD,IAAI,CAAC0C,MAAD,CAAJ,CAAapC,UAJpB,CANG;AAWToD,QAAAA,KAAK,EAAE5D,GAAG,CAAC8D,MAAJ,GACJd,GADI,CACA,EADA,EACI9C,IAAI,CAAC0C,MAAD,CAAJ,CAAavC,QADjB,EAEJ4C,GAFI,CAEA,GAFA,EAEK/C,IAAI,CAAC0C,MAAD,CAAJ,CAAatC,QAFlB,EAGJC,QAHI,CAGKL,IAAI,CAAC0C,MAAD,CAAJ,CAAarC,QAHlB,EAIJ2C,SAJI,CAIMhD,IAAI,CAAC0C,MAAD,CAAJ,CAAapC,UAJnB,CAXE;AAgBTqD,QAAAA,IAAI,EAAE7D,GAAG,CAAC8D,MAAJ,GACHd,GADG,CACC,EADD,EACK9C,IAAI,CAAC0C,MAAD,CAAJ,CAAavC,QADlB,EAEH4C,GAFG,CAEC,GAFD,EAEM/C,IAAI,CAAC0C,MAAD,CAAJ,CAAatC,QAFnB,EAGHC,QAHG,CAGML,IAAI,CAAC0C,MAAD,CAAJ,CAAarC,QAHnB,EAIH2C,SAJG,CAIOhD,IAAI,CAAC0C,MAAD,CAAJ,CAAapC,UAJpB;AAhBG,OAAX,CADgB;AAAA,KAPJ;AA8Bd8C,IAAAA,KAAK,EAAE;AACLI,MAAAA,MAAM,EAAE,MADH;AAELC,MAAAA,IAAI,EAAE,MAFD;AAGLC,MAAAA,KAAK,EAAE,MAHF;AAILC,MAAAA,IAAI,EAAE;AAJD,KA9BO;AAoCdE,IAAAA,QAAQ,EAAE,kBAACnB,MAAD;AAAA,aAA0B;AAClCc,QAAAA,MAAM,EAAEzD,SAAS,CAAC2C,MAAD,CAAT,CAAkBxC,EADQ;AAElCuD,QAAAA,IAAI,EAAE1D,SAAS,CAAC2C,MAAD,CAAT,CAAkBxC,EAFU;AAGlCwD,QAAAA,KAAK,EAAE3D,SAAS,CAAC2C,MAAD,CAAT,CAAkBxC,EAHS;AAIlCyD,QAAAA,IAAI,EAAE5D,SAAS,CAAC2C,MAAD,CAAT,CAAkBxC;AAJU,OAA1B;AAAA,KApCI;AA0CdoD,IAAAA,YAAY,EAAE,sBAACZ,MAAD;AAAA,aAA0B;AACtCc,QAAAA,MAAM,EAAEzD,SAAS,CAAC2C,MAAD,CAAT,CAAkBc,MADY;AAEtCC,QAAAA,IAAI,EAAE1D,SAAS,CAAC2C,MAAD,CAAT,CAAkBoB,UAFc;AAGtCJ,QAAAA,KAAK,EAAE3D,SAAS,CAAC2C,MAAD,CAAT,CAAkBqB,WAHa;AAItCJ,QAAAA,IAAI,EAAE5D,SAAS,CAAC2C,MAAD,CAAT,CAAkBsB;AAJc,OAA1B;AAAA;AA1CA,GA9FI;AA+IpBC,EAAAA,UAAU,EAAE;AACV7B,IAAAA,MAAM,EAAE;AAAEzB,MAAAA,KAAK,EAAE;AAAT,KADE;AAEV8B,IAAAA,gBAAgB,EAAE,0BAACC,MAAD;AAAA,aAChB5C,GAAG,CAAC6C,MAAJ,CAAW;AACThC,QAAAA,KAAK,EAAEb,GAAG,CAAC8C,MAAJ,GACJE,GADI,CACA,EADA,EACI9C,IAAI,CAAC0C,MAAD,CAAJ,CAAapC,UADjB,EAEJyC,GAFI,CAEA,EAFA,EAEI/C,IAAI,CAAC0C,MAAD,CAAJ,CAAapC,UAFjB,EAGJ0C,SAHI,CAGMhD,IAAI,CAAC0C,MAAD,CAAJ,CAAapC,UAHnB;AADE,OAAX,CADgB;AAAA,KAFR;AASV8C,IAAAA,KAAK,EAAE;AAAEzC,MAAAA,KAAK,EAAE;AAAT,KATG;AAUV2C,IAAAA,YAAY,EAAE,sBAACZ,MAAD;AAAA,aAA0B;AACtC/B,QAAAA,KAAK,EAAEX,IAAI,CAAC0C,MAAD,CAAJ,CAAa/B;AADkB,OAA1B;AAAA;AAVJ,GA/IQ;AA6JpBuD,EAAAA,cAAc,EAAE;AACd9B,IAAAA,MAAM,EAAE;AACN5B,MAAAA,SAAS,EAAE,EADL;AAENE,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,KAAK,EAAE,EAHD;AAINoB,MAAAA,GAAG,EAAE;AAJC,KADM;AAOdU,IAAAA,gBAAgB,EAAE,0BAACC,MAAD;AAAA,aAChB5C,GAAG,CAAC6C,MAAJ,CAAW;AACTnC,QAAAA,SAAS,EAAEV,GAAG,CAAC8C,MAAJ,GACRC,OADQ,CACA,oBADA,EACsB7C,IAAI,CAAC0C,MAAD,CAAJ,CAAanC,eADnC,EAERyC,SAFQ,CAEEhD,IAAI,CAAC0C,MAAD,CAAJ,CAAapC,UAFf,EAGRD,QAHQ,CAGCL,IAAI,CAAC0C,MAAD,CAAJ,CAAarC,QAHd,CADF;AAKTK,QAAAA,KAAK,EAAEZ,GAAG,CAAC8C,MAAJ,GAAalC,KAAb,GAAqBL,QAArB,CAA8BL,IAAI,CAAC0C,MAAD,CAAJ,CAAarC,QAA3C,CALE;AAMTM,QAAAA,KAAK,EAAEb,GAAG,CAAC8C,MAAJ,GACJvC,QADI,CACKL,IAAI,CAAC0C,MAAD,CAAJ,CAAarC,QADlB,EAEJyC,GAFI,CAEA,EAFA,EAEI9C,IAAI,CAAC0C,MAAD,CAAJ,CAAapC,UAFjB,EAGJyC,GAHI,CAGA,EAHA,EAGI/C,IAAI,CAAC0C,MAAD,CAAJ,CAAapC,UAHjB,EAIJ0C,SAJI,CAIMhD,IAAI,CAAC0C,MAAD,CAAJ,CAAapC,UAJnB,CANE;AAWTyB,QAAAA,GAAG,EAAEjC,GAAG,CAACqE,IAAJ,GACF9D,QADE,CACOL,IAAI,CAAC0C,MAAD,CAAJ,CAAarC,QADpB,EAEF+D,IAFE,CAEG,KAFH,EAEUpE,IAAI,CAAC0C,MAAD,CAAJ,CAAapC,UAFvB,EAEmC,UAAC+D,KAAD,EAAW;AAC/C,iBAAOA,KAAK,GACR,IAAIC,IAAJ,GAAWC,WAAX,MAA2BF,KAA3B,aAA2BA,KAA3B,uBAA2BA,KAAK,CAAEE,WAAP,EAA3B,KAAmD,EAD3C,GAER,KAFJ;AAGD,SANE;AAXI,OAAX,CADgB;AAAA,KAPJ;AA2BdnB,IAAAA,KAAK,EAAE;AAAE5C,MAAAA,SAAS,EAAE,MAAb;AAAqBE,MAAAA,KAAK,EAAE,MAA5B;AAAoCC,MAAAA,KAAK,EAAE,OAA3C;AAAoDoB,MAAAA,GAAG,EAAE;AAAzD,KA3BO;AA4BduB,IAAAA,YAAY,EAAE,sBAACZ,MAAD;AAAA,aAA0B;AACtClC,QAAAA,SAAS,EAAER,IAAI,CAAC0C,MAAD,CAAJ,CAAalC,SADc;AAEtCE,QAAAA,KAAK,EAAEV,IAAI,CAAC0C,MAAD,CAAJ,CAAahC,KAFkB;AAGtCC,QAAAA,KAAK,EAAEX,IAAI,CAAC0C,MAAD,CAAJ,CAAa/B,KAHkB;AAItCoB,QAAAA,GAAG,EAAE/B,IAAI,CAAC0C,MAAD,CAAJ,CAAaX;AAJoB,OAA1B;AAAA;AA5BA,GA7JI;AAgMpByC,EAAAA,OAAO,EAAE;AACPpC,IAAAA,MAAM,EAAE;AACNZ,MAAAA,YAAY,EAAE,EADR;AAENC,MAAAA,aAAa,EAAE,EAFT;AAGNC,MAAAA,QAAQ,EAAE,EAHJ;AAINC,MAAAA,SAAS,EAAE,EAJL;AAKN8C,MAAAA,OAAO,EAAE,EALH;AAMNC,MAAAA,KAAK,EAAE;AAND,KADD;AASPjC,IAAAA,gBAAgB,EAAE,0BAACC,MAAD;AAAA,aAChB5C,GAAG,CAAC6C,MAAJ,CAAW;AACTnB,QAAAA,YAAY,EAAE1B,GAAG,CAAC8C,MAAJ,GACXC,OADW,CACH,oBADG,EACmB7C,IAAI,CAAC0C,MAAD,CAAJ,CAAanC,eADhC,EAEXyC,SAFW,CAEDhD,IAAI,CAAC0C,MAAD,CAAJ,CAAapC,UAFZ,EAGXD,QAHW,CAGFL,IAAI,CAAC0C,MAAD,CAAJ,CAAarC,QAHX,CADL;AAKToB,QAAAA,aAAa,EAAE3B,GAAG,CAAC8C,MAAJ,GAAalC,KAAb,GAAqBL,QAArB,CAA8BL,IAAI,CAAC0C,MAAD,CAAJ,CAAarC,QAA3C,CALN;AAMTqB,QAAAA,QAAQ,EAAE5B,GAAG,CAAC8C,MAAJ,GACPC,OADO,CACC,oBADD,EACuB7C,IAAI,CAAC0C,MAAD,CAAJ,CAAanC,eADpC,EAEPyC,SAFO,CAEGhD,IAAI,CAAC0C,MAAD,CAAJ,CAAapC,UAFhB,EAGPD,QAHO,CAGEL,IAAI,CAAC0C,MAAD,CAAJ,CAAarC,QAHf,CAND;AAUTsB,QAAAA,SAAS,EAAE7B,GAAG,CAAC8C,MAAJ,GAAalC,KAAb,GAAqBL,QAArB,CAA8BL,IAAI,CAAC0C,MAAD,CAAJ,CAAarC,QAA3C,CAVF;AAWTqE,QAAAA,KAAK,EAAE5E,GAAG,CAAC8D,MAAJ,GACJd,GADI,CACA,CADA,EACG9C,IAAI,CAAC0C,MAAD,CAAJ,CAAavC,QADhB,EAEJE,QAFI,CAEKL,IAAI,CAAC0C,MAAD,CAAJ,CAAarC,QAFlB,EAGJ2C,SAHI,CAGMhD,IAAI,CAAC0C,MAAD,CAAJ,CAAapC,UAHnB;AAXE,OAAX,CADgB;AAAA,KATX;AA0BP8C,IAAAA,KAAK,EAAE;AACL5B,MAAAA,YAAY,EAAE,MADT;AAELC,MAAAA,aAAa,EAAE,MAFV;AAGLC,MAAAA,QAAQ,EAAE,MAHL;AAILC,MAAAA,SAAS,EAAE,MAJN;AAKL8C,MAAAA,OAAO,EAAE,UALJ;AAMLC,MAAAA,KAAK,EAAE;AANF,KA1BA;AAkCPb,IAAAA,QAAQ,EAAE;AACRa,MAAAA,KAAK,EAAE;AADC,KAlCH;AAqCPpB,IAAAA,YAAY,EAAE,sBAACZ,MAAD;AAAA,aAA0B;AACtClB,QAAAA,YAAY,EAAExB,IAAI,CAAC0C,MAAD,CAAJ,CAAalB,YADW;AAEtCC,QAAAA,aAAa,EAAEzB,IAAI,CAAC0C,MAAD,CAAJ,CAAajB,aAFU;AAGtCC,QAAAA,QAAQ,EAAE1B,IAAI,CAAC0C,MAAD,CAAJ,CAAahB,QAHe;AAItCC,QAAAA,SAAS,EAAE3B,IAAI,CAAC0C,MAAD,CAAJ,CAAaf,SAJc;AAKtC8C,QAAAA,OAAO,EAAEzE,IAAI,CAAC0C,MAAD,CAAJ,CAAad,WALgB;AAMtC8C,QAAAA,KAAK,EAAE1E,IAAI,CAAC0C,MAAD,CAAJ,CAAab;AANkB,OAA1B;AAAA;AArCP;AAhMW,CAAf","sourcesContent":["import * as Yup from 'yup';\r\nimport {} from 'yup/lib/Condition';\r\nimport { TRANSLATE } from './languages';\r\n\r\nexport const FORM = {\r\n  ru: {\r\n    cm: 'см',\r\n    tooSmall: 'cлишком малое значение',\r\n    tooLarge: 'cлишком большое значение',\r\n    required: 'обязательное поле',\r\n    wrongInput: 'неверное значение',\r\n    lettersRequired: 'некорректный ввод',\r\n    firstName: 'Имя',\r\n    lastName: 'Фамилия',\r\n    email: 'Электронная почта',\r\n    phone: '000000000',\r\n    country: 'Страна',\r\n    city: 'Город',\r\n    street: 'Улица',\r\n    house: 'Дом',\r\n    flat: 'Квартира',\r\n    paymentMethod: 'Способ оплаты',\r\n    paymentOnline: 'Оплата онлайн',\r\n    paymentManager: 'Оплата через менеджера',\r\n    novaPoshta: '\"Нова Пошта\"(по Украине)',\r\n    ukrPoshta: '\"Укр Пошта\"(за границу)',\r\n    courierNovaPoshta: 'Курьером \"Нова Пошта\"',\r\n    delivery: 'Доставка',\r\n    receiverName: 'Имя получателя',\r\n    receiverEmail: 'Почта получателя',\r\n    yourName: 'Ваше имя',\r\n    yourEmail: 'Ваша почта',\r\n    giftMessage: 'Сообщение (необязательно)',\r\n    giftAmount: 'Введите любую сумму сертификата',\r\n    warehouse: 'Отделение',\r\n    dob: 'Дата рождения',\r\n    russia: 'Извините, мы не доставляем наши товары в Россию',\r\n  },\r\n  en: {\r\n    cm: 'cm',\r\n    tooSmall: 'too small value',\r\n    tooLarge: 'too large value',\r\n    required: 'required',\r\n    wrongInput: 'wrong input',\r\n    lettersRequired: 'letters required',\r\n    firstName: 'First name',\r\n    lastName: 'Last name',\r\n    email: 'Email',\r\n    phone: '000000000',\r\n    country: 'Country',\r\n    city: 'City',\r\n    street: 'Street',\r\n    house: 'House',\r\n    flat: 'Flat',\r\n    paymentMethod: 'Payment method',\r\n    paymentOnline: 'Online payment',\r\n    delivery: 'Delivery',\r\n    paymentManager: 'Payment with manager',\r\n    novaPoshta: '\"Nova Poshta\"(in Ukraine)',\r\n    ukrPoshta: '\"Urk Poshta\"(abroad)',\r\n    courierNovaPoshta: 'Courier \"Nova Poshta\"',\r\n    receiverName: 'Receiver name',\r\n    receiverEmail: 'Receiver email',\r\n    yourName: 'Your name',\r\n    yourEmail: 'Your email',\r\n    giftMessage: 'Message (optional)',\r\n    giftAmount: 'Enter any amount of the certificate',\r\n    warehouse: 'Warehouse',\r\n    dob: 'Date of birth',\r\n    russia: \"Sorry, we don't deliver our goods to Russia\",\r\n  },\r\n};\r\n\r\nexport const FORMIK = {\r\n  shippingDiscount: {\r\n    values: {\r\n      code: '',\r\n    },\r\n  },\r\n  shippingMain: {\r\n    values: {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      phone: '',\r\n      country: '',\r\n      city: '',\r\n      paymentMethod: '',\r\n      deliveryMethod: '',\r\n      warehouse: '',\r\n      street: '',\r\n      house: '',\r\n      flat: '',\r\n      checkbox: false,\r\n    },\r\n    validationSchema: (locale: 'ru' | 'en') =>\r\n      Yup.object({\r\n        firstName: Yup.string()\r\n          .matches(/^[ a-zA-Zа-яА-Я]+$/, FORM[locale].lettersRequired)\r\n          .required(FORM[locale].required),\r\n        lastName: Yup.string()\r\n          .matches(/^[ a-zA-Zа-яА-Я]+$/, FORM[locale].lettersRequired)\r\n          .required(FORM[locale].required),\r\n        email: Yup.string()\r\n          .email(FORM[locale].wrongInput)\r\n          .required(FORM[locale].required),\r\n        phone: Yup.string()\r\n          .required(FORM[locale].required)\r\n          .min(11, FORM[locale].wrongInput)\r\n          .max(15, FORM[locale].wrongInput)\r\n          .typeError(FORM[locale].wrongInput),\r\n        country: Yup.string()\r\n          .matches(\r\n            /^(?!russia|россия|рф|rf|российская\\sфедерация).*$/giu,\r\n            FORM[locale].russia\r\n          )\r\n          .required(FORM[locale].required),\r\n        city: Yup.string().required(FORM[locale].required),\r\n        paymentMethod: Yup.string().required(FORM[locale].required),\r\n        deliveryMethod: Yup.string().required(FORM[locale].required),\r\n        warehouse: Yup.string().when('deliveryMethod', {\r\n          is: FORM[locale].novaPoshta,\r\n          then: Yup.string().required(FORM[locale].required),\r\n        }),\r\n        street: Yup.string().when('deliveryMethod', {\r\n          is: FORM[locale].courierNovaPoshta,\r\n          then: Yup.string().required(FORM[locale].required),\r\n        }),\r\n        house: Yup.string().when('deliveryMethod', {\r\n          is: FORM[locale].courierNovaPoshta,\r\n          then: Yup.string().required(FORM[locale].required),\r\n        }),\r\n        flat: Yup.string(),\r\n      }),\r\n    types: {\r\n      firstName: 'text',\r\n      lastName: 'text',\r\n      email: 'text',\r\n      phone: 'phone',\r\n      country: 'text',\r\n      city: 'text',\r\n      paymentMethod: 'select',\r\n      deliveryMethod: 'delivery',\r\n      warehouse: 'warehouse',\r\n      street: 'text',\r\n      house: 'text',\r\n      flat: 'text',\r\n      checkbox: 'checkbox',\r\n    },\r\n    selectOptions: (locale: 'ru' | 'en') => ({\r\n      paymentMethod: [FORM[locale].paymentOnline, FORM[locale].paymentManager],\r\n    }),\r\n    placeholders: (locale: 'ru' | 'en') => ({\r\n      firstName: FORM[locale].firstName,\r\n      lastName: FORM[locale].lastName,\r\n      email: FORM[locale].email,\r\n      phone: FORM[locale].phone,\r\n      country: FORM[locale].country,\r\n      city: FORM[locale].city,\r\n      street: FORM[locale].street,\r\n      house: FORM[locale].house,\r\n      flat: FORM[locale].flat,\r\n      paymentMethod: FORM[locale].paymentMethod,\r\n      deliveryMethod: FORM[locale].delivery,\r\n      warehouse: FORM[locale].warehouse,\r\n    }),\r\n  },\r\n  goodsExclusive: {\r\n    values: {\r\n      growth: '',\r\n      bust: '',\r\n      waist: '',\r\n      hips: '',\r\n    },\r\n    validationSchema: (locale: 'ru' | 'en') =>\r\n      Yup.object({\r\n        growth: Yup.number()\r\n          .min(100, FORM[locale].tooSmall)\r\n          .max(300, FORM[locale].tooLarge)\r\n          .required(FORM[locale].required)\r\n          .typeError(FORM[locale].wrongInput),\r\n        bust: Yup.number()\r\n          .min(20, FORM[locale].tooSmall)\r\n          .max(200, FORM[locale].tooLarge)\r\n          .required(FORM[locale].required)\r\n          .typeError(FORM[locale].wrongInput),\r\n        waist: Yup.number()\r\n          .min(20, FORM[locale].tooSmall)\r\n          .max(200, FORM[locale].tooLarge)\r\n          .required(FORM[locale].required)\r\n          .typeError(FORM[locale].wrongInput),\r\n        hips: Yup.number()\r\n          .min(20, FORM[locale].tooSmall)\r\n          .max(200, FORM[locale].tooLarge)\r\n          .required(FORM[locale].required)\r\n          .typeError(FORM[locale].wrongInput),\r\n      }),\r\n    types: {\r\n      growth: 'text',\r\n      bust: 'text',\r\n      waist: 'text',\r\n      hips: 'text',\r\n    },\r\n    suffixes: (locale: 'ru' | 'en') => ({\r\n      growth: TRANSLATE[locale].cm,\r\n      bust: TRANSLATE[locale].cm,\r\n      waist: TRANSLATE[locale].cm,\r\n      hips: TRANSLATE[locale].cm,\r\n    }),\r\n    placeholders: (locale: 'ru' | 'en') => ({\r\n      growth: TRANSLATE[locale].growth,\r\n      bust: TRANSLATE[locale].bustVolume,\r\n      waist: TRANSLATE[locale].waistVolume,\r\n      hips: TRANSLATE[locale].hipsVolume,\r\n    }),\r\n  },\r\n  footerForm: {\r\n    values: { phone: '' },\r\n    validationSchema: (locale: 'ru' | 'en') =>\r\n      Yup.object({\r\n        phone: Yup.string()\r\n          .min(11, FORM[locale].wrongInput)\r\n          .max(15, FORM[locale].wrongInput)\r\n          .typeError(FORM[locale].wrongInput),\r\n      }),\r\n    types: { phone: 'phone' },\r\n    placeholders: (locale: 'ru' | 'en') => ({\r\n      phone: FORM[locale].phone,\r\n    }),\r\n  },\r\n  modalStartForm: {\r\n    values: {\r\n      firstName: '',\r\n      email: '',\r\n      phone: '',\r\n      dob: '',\r\n    },\r\n    validationSchema: (locale: 'ru' | 'en') =>\r\n      Yup.object({\r\n        firstName: Yup.string()\r\n          .matches(/^[ a-zA-Zа-яА-Я]+$/, FORM[locale].lettersRequired)\r\n          .typeError(FORM[locale].wrongInput)\r\n          .required(FORM[locale].required),\r\n        email: Yup.string().email().required(FORM[locale].required),\r\n        phone: Yup.string()\r\n          .required(FORM[locale].required)\r\n          .min(11, FORM[locale].wrongInput)\r\n          .max(15, FORM[locale].wrongInput)\r\n          .typeError(FORM[locale].wrongInput),\r\n        dob: Yup.date()\r\n          .required(FORM[locale].required)\r\n          .test('dob', FORM[locale].wrongInput, (value) => {\r\n            return value\r\n              ? new Date().getFullYear() - value?.getFullYear() >= 10\r\n              : false;\r\n          }),\r\n      }),\r\n    types: { firstName: 'text', email: 'text', phone: 'phone', dob: 'date' },\r\n    placeholders: (locale: 'ru' | 'en') => ({\r\n      firstName: FORM[locale].firstName,\r\n      email: FORM[locale].email,\r\n      phone: FORM[locale].phone,\r\n      dob: FORM[locale].dob,\r\n    }),\r\n  },\r\n  voucher: {\r\n    values: {\r\n      receiverName: '',\r\n      receiverEmail: '',\r\n      yourName: '',\r\n      yourEmail: '',\r\n      message: '',\r\n      price: '',\r\n    },\r\n    validationSchema: (locale: 'ru' | 'en') =>\r\n      Yup.object({\r\n        receiverName: Yup.string()\r\n          .matches(/^[ a-zA-Zа-яА-Я]+$/, FORM[locale].lettersRequired)\r\n          .typeError(FORM[locale].wrongInput)\r\n          .required(FORM[locale].required),\r\n        receiverEmail: Yup.string().email().required(FORM[locale].required),\r\n        yourName: Yup.string()\r\n          .matches(/^[ a-zA-Zа-яА-Я]+$/, FORM[locale].lettersRequired)\r\n          .typeError(FORM[locale].wrongInput)\r\n          .required(FORM[locale].required),\r\n        yourEmail: Yup.string().email().required(FORM[locale].required),\r\n        price: Yup.number()\r\n          .min(1, FORM[locale].tooSmall)\r\n          .required(FORM[locale].required)\r\n          .typeError(FORM[locale].wrongInput),\r\n      }),\r\n    types: {\r\n      receiverName: 'text',\r\n      receiverEmail: 'text',\r\n      yourName: 'text',\r\n      yourEmail: 'text',\r\n      message: 'textArea',\r\n      price: 'text',\r\n    },\r\n    suffixes: {\r\n      price: 'UAH',\r\n    },\r\n    placeholders: (locale: 'ru' | 'en') => ({\r\n      receiverName: FORM[locale].receiverName,\r\n      receiverEmail: FORM[locale].receiverEmail,\r\n      yourName: FORM[locale].yourName,\r\n      yourEmail: FORM[locale].yourEmail,\r\n      message: FORM[locale].giftMessage,\r\n      price: FORM[locale].giftAmount,\r\n    }),\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}