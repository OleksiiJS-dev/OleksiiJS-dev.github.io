{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\archivegit\\\\blind-blind\\\\src\\\\components\\\\Celebrities\\\\Celebrities.tsx\";\nimport Link from 'next/link';\nimport { createPortal } from 'react-dom';\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Image from 'next/image';\nimport Modal from '../Modal/Modal';\nimport { TRANSLATE } from '../../constants/languages';\n\nconst Celebrities = ({\n  celebrities\n}) => {\n  const {\n    0: modalOpen,\n    1: setModalOpen\n  } = useState(false);\n  const {\n    0: modalPhoto,\n    1: setModalPhoto\n  } = useState('');\n  const {\n    locale\n  } = useRouter();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"celebrities container\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      href: \"/celebrities\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"collection-samples__title\",\n        children: TRANSLATE[locale].celebrities\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"celebrities__celebrities-container\",\n      children: celebrities.map(({\n        name,\n        proffesion,\n        photo\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"celebrity-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          role: \"presentation\",\n          onClick: () => {\n            setModalPhoto(photo.path);\n            setModalOpen(true);\n          },\n          className: \"photo-container\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            layout: \"fill\",\n            objectFit: \"cover\",\n            alt: name,\n            loading: \"eager\",\n            src: process.env.NEXT_PUBLIC_COCKPIT_URL + photo.path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"proffesion\",\n          children: proffesion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, photo.path, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), modalOpen && /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(Modal, {\n      close: () => setModalOpen(false),\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        layout: \"fill\",\n        objectFit: \"contain\",\n        loading: \"eager\",\n        src: process.env.NEXT_PUBLIC_COCKPIT_URL + modalPhoto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this), document.body)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Celebrities;","map":{"version":3,"sources":["D:/archivegit/blind-blind/src/components/Celebrities/Celebrities.tsx"],"names":["Link","createPortal","useState","useRouter","Image","Modal","TRANSLATE","Celebrities","celebrities","modalOpen","setModalOpen","modalPhoto","setModalPhoto","locale","map","name","proffesion","photo","path","process","env","NEXT_PUBLIC_COCKPIT_URL","document","body"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;AAIA,SAASC,SAAT,QAA0B,2BAA1B;;AAEA,MAAMC,WAAwC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AACpE,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BR,QAAQ,CAAU,KAAV,CAA1C;AACA,QAAM;AAAA,OAACS,UAAD;AAAA,OAAaC;AAAb,MAA8BV,QAAQ,CAAS,EAAT,CAA5C;AAEA,QAAM;AAAEW,IAAAA;AAAF,MAAaV,SAAS,EAA5B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,cAAX;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,2BAAd;AAAA,kBACGG,SAAS,CAACO,MAAD,CAAT,CAAiCL;AADpC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA,gBACGA,WAAW,CAACM,GAAZ,CAAgB,CAAC;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,UAAR;AAAoBC,QAAAA;AAApB,OAAD,kBACf;AAAsB,QAAA,SAAS,EAAC,gBAAhC;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,cADP;AAEE,UAAA,OAAO,EAAE,MAAM;AACbL,YAAAA,aAAa,CAACK,KAAK,CAACC,IAAP,CAAb;AACAR,YAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,WALH;AAME,UAAA,SAAS,EAAC,iBANZ;AAAA,iCAQE,QAAC,KAAD;AACE,YAAA,MAAM,EAAC,MADT;AAEE,YAAA,SAAS,EAAC,OAFZ;AAGE,YAAA,GAAG,EAAEK,IAHP;AAIE,YAAA,OAAO,EAAC,OAJV;AAKE,YAAA,GAAG,EAAEI,OAAO,CAACC,GAAR,CAAYC,uBAAZ,GAAsCJ,KAAK,CAACC;AALnD;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,gBADF,eAiBE;AAAG,UAAA,SAAS,EAAC,MAAb;AAAA,oBAAqBH;AAArB;AAAA;AAAA;AAAA;AAAA,gBAjBF,eAkBE;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA,oBAA2BC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA,SAAUC,KAAK,CAACC,IAAhB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YANF,EA8BGT,SAAS,iBACRR,YAAY,eACV,QAAC,KAAD;AAAO,MAAA,KAAK,EAAE,MAAMS,YAAY,CAAC,KAAD,CAAhC;AAAA,6BACE,QAAC,KAAD;AACE,QAAA,MAAM,EAAC,MADT;AAEE,QAAA,SAAS,EAAC,SAFZ;AAGE,QAAA,OAAO,EAAC,OAHV;AAIE,QAAA,GAAG,EAAES,OAAO,CAACC,GAAR,CAAYC,uBAAZ,GAAsCV;AAJ7C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADU,EASVW,QAAQ,CAACC,IATC,CA/BhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD,CAnDD;;AAqDA,eAAehB,WAAf","sourcesContent":["import Link from 'next/link';\r\nimport { createPortal } from 'react-dom';\r\nimport { useState } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport Image from 'next/image';\r\n\r\nimport Modal from '../Modal/Modal';\r\n\r\nimport { ICelebritiesProps } from './Types';\r\n\r\nimport { TRANSLATE } from '../../constants/languages';\r\n\r\nconst Celebrities: React.FC<ICelebritiesProps> = ({ celebrities }) => {\r\n  const [modalOpen, setModalOpen] = useState<boolean>(false);\r\n  const [modalPhoto, setModalPhoto] = useState<string>('');\r\n\r\n  const { locale } = useRouter();\r\n\r\n  return (\r\n    <div className=\"celebrities container\">\r\n      <Link href=\"/celebrities\">\r\n        <h3 className=\"collection-samples__title\">\r\n          {TRANSLATE[locale as 'ru' | 'en'].celebrities}\r\n        </h3>\r\n      </Link>\r\n      <div className=\"celebrities__celebrities-container\">\r\n        {celebrities.map(({ name, proffesion, photo }) => (\r\n          <div key={photo.path} className=\"celebrity-item\">\r\n            <div\r\n              role=\"presentation\"\r\n              onClick={() => {\r\n                setModalPhoto(photo.path);\r\n                setModalOpen(true);\r\n              }}\r\n              className=\"photo-container\"\r\n            >\r\n              <Image\r\n                layout=\"fill\"\r\n                objectFit=\"cover\"\r\n                alt={name}\r\n                loading=\"eager\"\r\n                src={process.env.NEXT_PUBLIC_COCKPIT_URL + photo.path}\r\n              />\r\n            </div>\r\n            <p className=\"name\">{name}</p>\r\n            <p className=\"proffesion\">{proffesion}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {modalOpen &&\r\n        createPortal(\r\n          <Modal close={() => setModalOpen(false)}>\r\n            <Image\r\n              layout=\"fill\"\r\n              objectFit=\"contain\"\r\n              loading=\"eager\"\r\n              src={process.env.NEXT_PUBLIC_COCKPIT_URL + modalPhoto}\r\n            />\r\n          </Modal>,\r\n          document.body\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Celebrities;\r\n"]},"metadata":{},"sourceType":"module"}