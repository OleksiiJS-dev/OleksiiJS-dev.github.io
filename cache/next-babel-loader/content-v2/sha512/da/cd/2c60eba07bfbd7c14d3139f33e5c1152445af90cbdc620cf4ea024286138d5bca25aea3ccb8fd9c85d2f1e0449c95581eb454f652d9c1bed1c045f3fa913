{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport GoodsItem, { GoodsItemFallback } from './GoodsItem';\nimport Dropdown from '../Form/Dropdown';\nimport SuccessSVG from '../../assets/svg/success.svg';\nimport CrossSVG from '../../assets/svg/cross.svg';\nimport { SORT_GOODS, SORT_TRANSLATE } from '../../constants/sortGoods';\nimport { TRANSLATE } from '../../constants/languages';\nconst GOODS_ON_PAGE = 12;\nconst AVAILABLE_PAGES = 3;\n\nconst GoodsList = ({\n  goods,\n  categories\n}) => {\n  const {\n    0: sortSelect,\n    1: setSortSelect\n  } = useState('default');\n  const router = useRouter();\n  const {\n    locale,\n    query\n  } = router;\n  const {\n    0: isCategoriesOpen,\n    1: setCategoriesOpen\n  } = useState(false);\n  const {\n    0: selectedCategories,\n    1: setSelectedCategories\n  } = useState([]);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: visiblePages,\n    1: setVisiblePages\n  } = useState([]);\n  const {\n    0: firstGoodsOnPageIndex,\n    1: setFirstGoodsOnPageIndex\n  } = useState(1);\n  const filteredGoods = goods === null || goods === void 0 ? void 0 : goods.entries.filter(({\n    categories\n  }) => selectedCategories.length == 0 || Array.isArray(categories) && categories.reduce((prev, {\n    _id\n  }) => selectedCategories.includes(_id) || prev, false));\n  const sortedGoods = SORT_GOODS[sortSelect](filteredGoods);\n  const maxPageNumber = Math.ceil((sortedGoods === null || sortedGoods === void 0 ? void 0 : sortedGoods.length) / GOODS_ON_PAGE);\n  useEffect(() => {\n    const outsideClick = () => setCategoriesOpen(() => false);\n\n    document && document.addEventListener('click', outsideClick, {\n      passive: true\n    });\n    return () => document && document.removeEventListener('click', outsideClick);\n  }, []);\n  useEffect(() => {\n    setFirstGoodsOnPageIndex((currentPage - 1) * GOODS_ON_PAGE);\n    if (maxPageNumber <= 1) setVisiblePages([]);else if (currentPage + 1 + AVAILABLE_PAGES >= maxPageNumber) setVisiblePages([...Array(maxPageNumber + 1).keys()].splice(maxPageNumber > AVAILABLE_PAGES ? maxPageNumber - AVAILABLE_PAGES : 1, maxPageNumber));else if (currentPage + 1 - AVAILABLE_PAGES <= 0) setVisiblePages([...Array(maxPageNumber + 1).keys()].splice(1, AVAILABLE_PAGES));else setVisiblePages([...Array(maxPageNumber + 1).keys()].splice(currentPage - Math.floor(AVAILABLE_PAGES / 2), currentPage + Math.ceil(AVAILABLE_PAGES / 2) - 1));\n  }, [currentPage, maxPageNumber]);\n  useEffect(() => {\n    const page = query.page ? Number.parseInt(query.page) : 0;\n    setCurrentPage(page && page < maxPageNumber + 1 ? page : 1);\n  }, [query.page, maxPageNumber]);\n  useEffect(() => {\n    if (selectedCategories.length) {\n      setCurrentPage(1);\n      const newQuery = router.query;\n      newQuery['page'] = '1';\n      router.push({\n        pathname: router.pathname,\n        query: newQuery\n      });\n    }\n  }, [selectedCategories]);\n\n  const changePage = pageNum => {\n    const newQuery = router.query;\n\n    if (!pageNum) {\n      delete newQuery.page;\n    } else {\n      newQuery['page'] = pageNum.toString();\n    }\n\n    router.push({\n      pathname: router.pathname,\n      query: newQuery\n    });\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n\n  const setSort = item => {\n    setSortSelect(Object.keys(SORT_TRANSLATE).find(key => SORT_TRANSLATE[key][locale] === item));\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"goods-list\",\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"input-select\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        role: \"presentation\",\n        className: \"dropdown\",\n        onClick: e => {\n          e.stopPropagation();\n          setCategoriesOpen(prev => !prev);\n        },\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"dropdown__value\",\n          children: [TRANSLATE[locale].goodsCaterories, /*#__PURE__*/_jsx(\"div\", {\n            className: \"dropdown-button\"\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: `dropdown__list goods-list-categories__list ${isCategoriesOpen ? 'open' : ''}`,\n          children: categories.map(({\n            _id,\n            title\n          }) => /*#__PURE__*/_jsx(\"div\", {\n            className: \"goods-list-categories__list-item\",\n            role: \"presentation\",\n            onClick: () => {\n              setSelectedCategories(prev => prev.includes(_id) ? prev.filter(id => id != _id) : [...prev, _id]);\n            },\n            children: /*#__PURE__*/_jsxs(\"div\", {\n              className: \"goods-list-categories__list-item-label\",\n              children: [/*#__PURE__*/_jsx(\"div\", {\n                className: `goods-list-categories__list-item-label-box ${selectedCategories.includes(_id) ? 'goods-list-categories__list-item-label-box-selected' : ''}`,\n                children: /*#__PURE__*/_jsx(SuccessSVG, {})\n              }), title]\n            })\n          }, _id))\n        })]\n      }), /*#__PURE__*/_jsx(Dropdown, {\n        value: SORT_TRANSLATE[sortSelect][locale],\n        values: Object.keys(SORT_TRANSLATE).map(key => SORT_TRANSLATE[key][locale]),\n        setValue: setSort\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"goods-list__categories\",\n      children: categories.filter(({\n        _id\n      }) => selectedCategories.includes(_id)).map(({\n        _id,\n        title\n      }) => /*#__PURE__*/_jsxs(\"div\", {\n        role: \"presentation\",\n        className: \"goods-list__categories-title\",\n        onClick: () => setSelectedCategories(prev => prev.filter(id => id != _id)),\n        children: [title, /*#__PURE__*/_jsx(CrossSVG, {})]\n      }, _id))\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"goods-list__goods-container\",\n      children: sortedGoods.slice(firstGoodsOnPageIndex, firstGoodsOnPageIndex + GOODS_ON_PAGE).map(({\n        _id,\n        title,\n        price,\n        stockPrice,\n        link,\n        previewImage,\n        secondImage\n      }) => /*#__PURE__*/_jsx(GoodsItem, {\n        title: title,\n        link: link,\n        photo: previewImage.path,\n        secondPhoto: (secondImage === null || secondImage === void 0 ? void 0 : secondImage.path) || undefined,\n        price: price,\n        stockPrice: stockPrice\n      }, _id))\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"goods-list__pages-buttons\",\n      children: [currentPage > 1 && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        onClick: () => changePage(currentPage - 1),\n        className: \"chevron-left\"\n      }), visiblePages.map(pageNum => /*#__PURE__*/_jsx(\"div\", {\n        className: \"page-number\",\n        children: /*#__PURE__*/_jsx(\"p\", {\n          role: \"presentation\",\n          onClick: () => changePage(pageNum),\n          className: pageNum === currentPage ? 'selected' : '',\n          children: pageNum\n        })\n      }, pageNum)), currentPage < maxPageNumber - 1 && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        onClick: () => changePage(currentPage + 1),\n        className: \"chevron-right\"\n      })]\n    })]\n  });\n};\n\nexport const GoodsListFallback = () => {\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"goods-list-fallback\",\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: \"goods-list-fallback__goods-container\",\n      children: Array.from({\n        length: 9\n      }, (_, index) => /*#__PURE__*/_jsx(GoodsItemFallback, {}, index))\n    })\n  });\n};\nexport default GoodsList;","map":null,"metadata":{},"sourceType":"module"}