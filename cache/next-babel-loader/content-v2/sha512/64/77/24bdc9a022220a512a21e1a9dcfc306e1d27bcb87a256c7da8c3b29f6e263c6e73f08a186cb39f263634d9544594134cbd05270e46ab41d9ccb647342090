{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\archivegit\\\\blind-blind\\\\src\\\\components\\\\Form\\\\Dropdown.tsx\";\nimport { useState, useEffect } from 'react';\n\nconst Dropdown = ({\n  value,\n  placeholder,\n  values,\n  setValue\n}) => {\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  useEffect(() => {\n    const outsideClick = () => setIsOpen(() => false);\n\n    document && document.addEventListener('click', outsideClick, {\n      passive: true\n    });\n    return () => document && document.removeEventListener('click', outsideClick);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown__value\",\n        role: \"presentation\",\n        onClick: e => {\n          e.stopPropagation();\n          setIsOpen(!isOpen);\n        },\n        children: [value ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"value-label\",\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"placeholder\",\n          children: placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `dropdown__list ${isOpen ? 'open' : ''}`,\n        children: values === null || values === void 0 ? void 0 : values.map(listItem => /*#__PURE__*/_jsxDEV(\"p\", {\n          role: \"presentation\",\n          onClick: () => {\n            setValue(listItem);\n            setIsOpen(false);\n          },\n          children: listItem\n        }, listItem, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport default Dropdown;","map":{"version":3,"sources":["D:/archivegit/blind-blind/src/components/Form/Dropdown.tsx"],"names":["useState","useEffect","Dropdown","value","placeholder","values","setValue","isOpen","setIsOpen","outsideClick","document","addEventListener","passive","removeEventListener","e","stopPropagation","map","listItem"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAGA,MAAMC,QAAkC,GAAG,CAAC;AAC1CC,EAAAA,KAD0C;AAE1CC,EAAAA,WAF0C;AAG1CC,EAAAA,MAH0C;AAI1CC,EAAAA;AAJ0C,CAAD,KAKrC;AACJ,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBR,QAAQ,CAAC,KAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,YAAY,GAAG,MAAMD,SAAS,CAAC,MAAM,KAAP,CAApC;;AACAE,IAAAA,QAAQ,IACNA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCF,YAAnC,EAAiD;AAAEG,MAAAA,OAAO,EAAE;AAAX,KAAjD,CADF;AAEA,WAAO,MACLF,QAAQ,IAAIA,QAAQ,CAACG,mBAAT,CAA6B,OAA7B,EAAsCJ,YAAtC,CADd;AAED,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,IAAI,EAAC,cAFP;AAGE,QAAA,OAAO,EAAGK,CAAD,IAAO;AACdA,UAAAA,CAAC,CAACC,eAAF;AACAP,UAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,SANH;AAAA,mBAQGJ,KAAK,gBACJ;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA,oBAA4BA;AAA5B;AAAA;AAAA;AAAA;AAAA,gBADI,gBAGJ;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA,oBAA4BC;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAaE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAgBE;AAAK,QAAA,SAAS,EAAG,kBAAiBG,MAAM,GAAG,MAAH,GAAY,EAAG,EAAvD;AAAA,kBACGF,MADH,aACGA,MADH,uBACGA,MAAM,CAAEW,GAAR,CAAaC,QAAD,iBACX;AAEE,UAAA,IAAI,EAAC,cAFP;AAGE,UAAA,OAAO,EAAE,MAAM;AACbX,YAAAA,QAAQ,CAACW,QAAD,CAAR;AACAT,YAAAA,SAAS,CAAC,KAAD,CAAT;AACD,WANH;AAAA,oBAQGS;AARH,WACOA,QADP;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAmCD,CAnDD;;AAqDA,eAAef,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { IDropdownProps } from './Types';\r\n\r\nconst Dropdown: React.FC<IDropdownProps> = ({\r\n  value,\r\n  placeholder,\r\n  values,\r\n  setValue,\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const outsideClick = () => setIsOpen(() => false);\r\n    document &&\r\n      document.addEventListener('click', outsideClick, { passive: true });\r\n    return () =>\r\n      document && document.removeEventListener('click', outsideClick);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"dropdown\">\r\n        <div\r\n          className=\"dropdown__value\"\r\n          role=\"presentation\"\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            setIsOpen(!isOpen);\r\n          }}\r\n        >\r\n          {value ? (\r\n            <p className=\"value-label\">{value}</p>\r\n          ) : (\r\n            <p className=\"placeholder\">{placeholder}</p>\r\n          )}\r\n          <div className=\"dropdown-button\" />\r\n        </div>\r\n        <div className={`dropdown__list ${isOpen ? 'open' : ''}`}>\r\n          {values?.map((listItem) => (\r\n            <p\r\n              key={listItem}\r\n              role=\"presentation\"\r\n              onClick={() => {\r\n                setValue(listItem);\r\n                setIsOpen(false);\r\n              }}\r\n            >\r\n              {listItem}\r\n            </p>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n"]},"metadata":{},"sourceType":"module"}