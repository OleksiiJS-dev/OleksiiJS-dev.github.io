{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState, useEffect } from 'react';\n\nconst Dropdown = ({\n  value,\n  placeholder,\n  values,\n  setValue\n}) => {\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  useEffect(() => {\n    const outsideClick = () => setIsOpen(() => false);\n\n    document && document.addEventListener('click', outsideClick, {\n      passive: true\n    });\n    return () => document && document.removeEventListener('click', outsideClick);\n  }, []);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"dropdown\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"dropdown__value\",\n        role: \"presentation\",\n        onClick: e => {\n          e.stopPropagation();\n          setIsOpen(!isOpen);\n        },\n        children: [value ? /*#__PURE__*/_jsx(\"p\", {\n          className: \"value-label\",\n          children: value\n        }) : /*#__PURE__*/_jsx(\"p\", {\n          className: \"placeholder\",\n          children: placeholder\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"dropdown-button\"\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: `dropdown__list ${isOpen ? 'open' : ''}`,\n        children: values === null || values === void 0 ? void 0 : values.map(listItem => /*#__PURE__*/_jsx(\"p\", {\n          role: \"presentation\",\n          onClick: () => {\n            setValue(listItem);\n            setIsOpen(false);\n          },\n          children: listItem\n        }, listItem))\n      })]\n    })\n  });\n};\n\nexport default Dropdown;","map":null,"metadata":{},"sourceType":"module"}