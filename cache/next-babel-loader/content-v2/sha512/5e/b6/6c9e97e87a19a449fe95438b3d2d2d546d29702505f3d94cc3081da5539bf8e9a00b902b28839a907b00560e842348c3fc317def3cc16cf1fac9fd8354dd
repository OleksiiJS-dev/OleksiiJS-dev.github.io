{"ast":null,"code":"export let ECurrency;\n\n(function (ECurrency) {\n  ECurrency[ECurrency[\"UAH\"] = 0] = \"UAH\";\n  ECurrency[ECurrency[\"EUR\"] = 1] = \"EUR\";\n  ECurrency[ECurrency[\"USD\"] = 2] = \"USD\";\n})(ECurrency || (ECurrency = {}));","map":{"version":3,"sources":["D:/archivegit/blind-blind/src/context/Types.ts"],"names":["ECurrency"],"mappings":"AAwBA,WAAYA,SAAZ;;WAAYA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;GAAAA,S,KAAAA,S","sourcesContent":["import { Dispatch, SetStateAction } from 'react';\r\n\r\nimport {\r\n  ICockpitCollections,\r\n  ICockpitRunwaysAndLookbooks,\r\n} from '../cockpitTypes';\r\nimport {\r\n  ICartGoodsItemProps,\r\n  ICartVoucherItemProps,\r\n} from '../components/Cart/Types';\r\n\r\nexport interface IIndexContext {\r\n  collectionsData: ICockpitCollections[];\r\n  runwaysData: ICockpitRunwaysAndLookbooks[];\r\n  hasStocks: boolean;\r\n}\r\n\r\nexport interface ICartContext {\r\n  cart: (ICartGoodsItemProps | ICartVoucherItemProps)[];\r\n  addItem: (item: ICartGoodsItemProps | ICartVoucherItemProps) => void;\r\n  removeItem: (item: ICartGoodsItemProps | ICartVoucherItemProps) => void;\r\n  clearCart: () => void;\r\n}\r\n\r\nexport enum ECurrency {\r\n  UAH,\r\n  EUR,\r\n  USD,\r\n}\r\n\r\nexport interface ICurrencyContext {\r\n  currency: ECurrency;\r\n  currencyRate: number;\r\n  setCurrency: Dispatch<SetStateAction<ECurrency>>;\r\n  USDRate: number;\r\n}\r\n\r\nexport interface ICheckoutContext {\r\n  deliveryType: string;\r\n  deliveryCost: number;\r\n  currencyTotalCheckout: string;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}