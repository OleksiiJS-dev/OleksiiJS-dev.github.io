{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/* eslint-disable react/no-array-index-key */\nimport React, { useState, useEffect, useRef } from 'react';\nvar TRANSITION = 500;\n\nvar Carousel = function Carousel(_ref) {\n  var children = _ref.children,\n      _ref$infinity = _ref.infinity,\n      infinity = _ref$infinity === void 0 ? true : _ref$infinity,\n      buttonPrev = _ref.buttonPrev,\n      buttonNext = _ref.buttonNext,\n      withRange = _ref.withRange,\n      withDots = _ref.withDots,\n      callback = _ref.callback;\n  var carousel = useRef();\n\n  var _useState = useState(0),\n      slide = _useState[0],\n      setSlide = _useState[1];\n\n  var handleNextSlide = function handleNextSlide() {\n    if (slide + 1 < children.length) setSlide(slide + 1);else if (infinity) {\n      setSlide(slide + 1);\n      setTimeout(function () {\n        if (carousel.current) carousel.current.style.transition = 'none';\n        setSlide(0);\n        setTimeout(function () {\n          if (carousel.current) carousel.current.style.transition = \"transform \".concat(TRANSITION, \"ms\");\n        }, 10);\n      }, TRANSITION + 100);\n    }\n  };\n\n  var handlePrevSlide = function handlePrevSlide() {\n    if (slide - 1 >= 0) {\n      setSlide(slide - 1);\n    } else if (infinity) {\n      setSlide(slide - 1);\n      setTimeout(function () {\n        if (carousel.current) carousel.current.style.transition = 'none';\n        setSlide(children.length - 1);\n        setTimeout(function () {\n          if (carousel.current) carousel.current.style.transition = \"transform \".concat(TRANSITION, \"ms\");\n        }, 10);\n      }, TRANSITION + 100);\n    }\n  };\n\n  var handleTouch = function handleTouch() {\n    var startX = 0;\n\n    var handleTouchStart = function handleTouchStart(e) {\n      var screenX = e.touches[0].screenX;\n      startX = screenX;\n      if (carousel.current) carousel.current.style.transition = 'none';\n    };\n\n    var handleTouchMove = function handleTouchMove(e) {\n      var _carousel$current;\n\n      var screenX = e.changedTouches[0].screenX;\n\n      var _ref2 = (_carousel$current = carousel.current) !== null && _carousel$current !== void 0 ? _carousel$current : {},\n          _ref2$offsetWidth = _ref2.offsetWidth,\n          offsetWidth = _ref2$offsetWidth === void 0 ? 0 : _ref2$offsetWidth;\n\n      var delta = screenX - startX;\n      if (infinity || !(slide === children.length - 1 && delta < 0) && !(slide === 0 && delta > 0)) if (carousel.current) carousel.current.style.transform = \"translateX(\".concat(-offsetWidth * slide + delta, \"px)\");\n    };\n\n    var handleTouchEnd = function handleTouchEnd(e) {\n      var screenX = e.changedTouches[0].screenX;\n      var delta = screenX - startX;\n      if (carousel.current) carousel.current.style.transition = \"transform \".concat(TRANSITION, \"ms\");\n      if (delta < -40) handleNextSlide();else if (delta > 40) handlePrevSlide();else if (carousel.current) carousel.current.style.transform = \"translateX(-\".concat(100 * slide, \"%)\");\n    };\n\n    if (carousel.current) {\n      carousel.current.addEventListener('touchstart', handleTouchStart, {\n        passive: true\n      });\n      carousel.current.addEventListener('touchmove', handleTouchMove, {\n        passive: false\n      });\n      carousel.current.addEventListener('touchend', handleTouchEnd, {\n        passive: true\n      });\n    }\n\n    return function () {\n      if (carousel.current) {\n        carousel.current.removeEventListener('touchstart', handleTouchStart);\n        carousel.current.removeEventListener('touchmove', handleTouchMove);\n        carousel.current.removeEventListener('touchend', handleTouchEnd);\n      }\n    };\n  };\n\n  useEffect(function () {\n    if (carousel.current) carousel.current.style.transform = \"translateX(\".concat(-100 * slide, \"%)\");\n    var touchcleanUp = handleTouch();\n    if (callback) callback(slide);\n    return function () {\n      touchcleanUp();\n    };\n  }, [slide]);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"carousel\",\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"carousel-list\",\n      ref: carousel,\n      style: {\n        marginLeft: \"-\".concat(children.length * 100 * +infinity, \"%\"),\n        transition: \"transform \".concat(TRANSITION, \"ms\")\n      },\n      children: [infinity && children.map(function (child, idx) {\n        return /*#__PURE__*/_jsx(\"div\", {\n          className: \"carousel-list-item\",\n          children: child\n        }, idx);\n      }), children.map(function (child, idx) {\n        return /*#__PURE__*/_jsx(\"div\", {\n          className: \"carousel-list-item \".concat(idx === slide ? 'carousel-list-item-current' : ''),\n          children: child\n        }, idx);\n      }), infinity && children.map(function (child, idx) {\n        return /*#__PURE__*/_jsx(\"div\", {\n          className: \"carousel-list-item\",\n          children: child\n        }, idx);\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"carousel-buttons\",\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        className: \"carousel-buttons-prev\",\n        onClick: handlePrevSlide,\n        children: buttonPrev\n      }), /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        className: \"carousel-buttons-next\",\n        onClick: handleNextSlide,\n        children: buttonNext\n      })]\n    }), withRange && /*#__PURE__*/_jsxs(\"div\", {\n      className: \"carousel-range\",\n      children: [/*#__PURE__*/_jsx(\"span\", {\n        className: \"carousel-range-number\",\n        children: \"01\"\n      }), /*#__PURE__*/_jsx(\"input\", {\n        className: \"carousel-range-input\",\n        value: slide,\n        type: \"range\",\n        min: \"0\",\n        max: children.length - 1,\n        step: \"1\",\n        onChange: function onChange(_ref3) {\n          var value = _ref3.target.value;\n          setSlide(+value);\n        }\n      }), /*#__PURE__*/_jsx(\"span\", {\n        className: \"carousel-range-number\",\n        children: \"\".concat(children.length < 10 ? 0 : '').concat(children.length)\n      })]\n    }), withDots && /*#__PURE__*/_jsx(\"div\", {\n      className: \"carousel-dots\",\n      children: children.map(function (_, idx) {\n        return /*#__PURE__*/_jsx(\"div\", {\n          role: \"presentation\",\n          className: \"carousel-dots-item \".concat(idx === slide ? 'carousel-dots-item-current' : ''),\n          onClick: function onClick() {\n            return setSlide(idx);\n          }\n        }, idx);\n      })\n    })]\n  });\n};\n\nexport default Carousel;","map":null,"metadata":{},"sourceType":"module"}