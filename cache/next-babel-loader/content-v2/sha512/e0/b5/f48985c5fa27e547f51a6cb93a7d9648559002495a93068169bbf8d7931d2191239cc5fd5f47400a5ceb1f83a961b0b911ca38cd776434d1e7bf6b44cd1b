{"ast":null,"code":"import { Telegram } from 'telegraf';\nconst bot = new Telegram(process.env.NEXT_PUBLIC_TELEGRAM_KEY);\n\nconst sendToBot = async (users, firstName, email, phone, dob) => {\n  const message = `Имя: ${firstName}\\n` + `Почта: ${email}\\n` + `Телефон: ${phone}\\n` + `Дата Рождения: ${dob}\\n`;\n  const messages = users.map(({\n    chatId\n  }) => bot.sendMessage(+chatId, message));\n  await Promise.allSettled(messages).catch(err => console.log(err));\n};\n\nconst subscription = async (req, res) => {\n  const {\n    firstName,\n    email,\n    phone,\n    dob\n  } = req.body;\n  const check = firstName && email && phone && dob;\n  if (!check) return res.status(400).send({\n    message: 'Bad Request'\n  });\n  const url = `${process.env.NEXT_PUBLIC_COCKPIT_URL}api/collections/save/Subscriptions`;\n\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${process.env.NEXT_PUBLIC_COCKPIT_TOKEN}`\n      },\n      body: JSON.stringify({\n        data: {\n          firstName,\n          email,\n          phone,\n          dob\n        }\n      })\n    });\n    const sendOrderUsersUrl = `${process.env.NEXT_PUBLIC_COCKPIT_URL}api/collections/get/BotUsers`;\n    const usersResponse = await fetch(sendOrderUsersUrl, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${process.env.NEXT_PUBLIC_COCKPIT_TOKEN}`\n      }\n    });\n    const {\n      entries\n    } = await usersResponse.json();\n    sendToBot(entries, firstName, email, phone, dob);\n\n    if (response.status === 200) {\n      return res.status(200).send({\n        message: 'ok'\n      });\n    }\n  } catch {\n    return res.status(400).send({\n      message: 'Bad Request'\n    });\n  }\n};\n\nexport default subscription;","map":null,"metadata":{},"sourceType":"module"}