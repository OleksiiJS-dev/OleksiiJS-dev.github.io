{"ast":null,"code":"import _defineProperty from \"D:/archivegit/blind-blind/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"D:/archivegit/blind-blind/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"D:\\\\archivegit\\\\blind-blind\\\\src\\\\components\\\\Button\\\\Button.tsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar Button = function Button(_ref) {\n  var title = _ref.title,\n      callback = _ref.callback,\n      buttonProps = _objectWithoutProperties(_ref, [\"title\", \"callback\"]);\n\n  return /*#__PURE__*/_jsxDEV(\"button\", _objectSpread(_objectSpread({\n    className: \"button\",\n    onClick: callback\n  }, buttonProps), {}, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"button__title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, _this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["D:/archivegit/blind-blind/src/components/Button/Button.tsx"],"names":["Button","title","callback","buttonProps"],"mappings":";;;;;;;;;;;AAIA,IAAMA,MAML,GAAG,SANEA,MAMF,OAAyC;AAAA,MAAtCC,KAAsC,QAAtCA,KAAsC;AAAA,MAA/BC,QAA+B,QAA/BA,QAA+B;AAAA,MAAlBC,WAAkB;;AAC3C,sBACE;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAED;AAApC,KAAkDC,WAAlD;AAAA,2BACE;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA,gBAA8BF;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAZD;;KAAMD,M;AAcN,eAAeA,MAAf","sourcesContent":["import { ButtonHTMLAttributes, DetailedHTMLProps } from 'react';\r\n\r\nimport { IButtonProps } from './Types';\r\n\r\nconst Button: React.FC<\r\n  IButtonProps &\r\n    DetailedHTMLProps<\r\n      ButtonHTMLAttributes<HTMLButtonElement>,\r\n      HTMLButtonElement\r\n    >\r\n> = ({ title, callback, ...buttonProps }) => {\r\n  return (\r\n    <button className=\"button\" onClick={callback} {...buttonProps}>\r\n      <p className=\"button__title\">{title}</p>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n"]},"metadata":{},"sourceType":"module"}