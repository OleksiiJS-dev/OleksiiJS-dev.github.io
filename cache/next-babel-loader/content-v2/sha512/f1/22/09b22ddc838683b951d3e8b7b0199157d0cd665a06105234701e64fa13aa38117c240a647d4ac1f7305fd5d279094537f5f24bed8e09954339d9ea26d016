{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\blind-blind\\\\src\\\\components\\\\ArrowUp\\\\ArrowUp.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport ArrowSVG from '../../assets/svg/arrow.svg';\nimport { UTM_TAGS } from '../../constants/utmTags';\n\nconst ArrowUp = () => {\n  const {\n    0: isArrowVisible,\n    1: changeArrowVisability\n  } = useState(false);\n\n  const handleScrollTop = () => false && window.scrollTo({\n    top: 0,\n    behavior: 'smooth'\n  });\n\n  useEffect(() => {\n    if (false) {\n      const urlParams = new URLSearchParams(window.location.search);\n      UTM_TAGS.forEach(tag => {\n        const value = urlParams.get(tag);\n\n        if (value) {\n          document.cookie = `${tag}=${value}; path=/;`;\n        }\n      });\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          coords: {\n            latitude,\n            longitude\n          }\n        } = position;\n        fetch(`https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${latitude}&longitude=${longitude}&localityLanguage=en`).then(res => res.json()).then(result => {\n          document.cookie = `user_geo=${result.countryName}, ${result.city}; path=/;`;\n        }).catch(console.error);\n      });\n    }\n\n    const scrollHandler = () => {\n      false && changeArrowVisability(() => window.scrollY > 0);\n    };\n\n    false && window.addEventListener('scroll', scrollHandler, {\n      passive: true\n    });\n    return () => {\n      false && window.removeEventListener('scroll', scrollHandler);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `arrow-up ${isArrowVisible ? 'arrow-up-visible' : ''}`,\n    onClick: handleScrollTop,\n    children: /*#__PURE__*/_jsxDEV(ArrowSVG, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ArrowUp;","map":{"version":3,"sources":["C:/Users/user/Documents/GitHub/blind-blind/src/components/ArrowUp/ArrowUp.tsx"],"names":["React","useState","useEffect","ArrowSVG","UTM_TAGS","ArrowUp","isArrowVisible","changeArrowVisability","handleScrollTop","window","scrollTo","top","behavior","urlParams","URLSearchParams","location","search","forEach","tag","value","get","document","cookie","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetch","then","res","json","result","countryName","city","catch","console","error","scrollHandler","scrollY","addEventListener","passive","removeEventListener"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,QAAT,QAAyB,yBAAzB;;AAEA,MAAMC,OAAiB,GAAG,MAAM;AAC9B,QAAM;AAAA,OAACC,cAAD;AAAA,OAAiBC;AAAjB,MAA0CN,QAAQ,CAAC,KAAD,CAAxD;;AACA,QAAMO,eAAe,GAAG,MACtB,SACAC,MAAM,CAACC,QAAP,CAAgB;AAAEC,IAAAA,GAAG,EAAE,CAAP;AAAUC,IAAAA,QAAQ,EAAE;AAApB,GAAhB,CAFF;;AAGAV,EAAAA,SAAS,CAAC,MAAM;AACd,eAAmC;AACjC,YAAMW,SAAS,GAAG,IAAIC,eAAJ,CAAoBL,MAAM,CAACM,QAAP,CAAgBC,MAApC,CAAlB;AACAZ,MAAAA,QAAQ,CAACa,OAAT,CAAkBC,GAAD,IAAS;AACxB,cAAMC,KAAK,GAAGN,SAAS,CAACO,GAAV,CAAcF,GAAd,CAAd;;AACA,YAAIC,KAAJ,EAAW;AACTE,UAAAA,QAAQ,CAACC,MAAT,GAAmB,GAAEJ,GAAI,IAAGC,KAAM,WAAlC;AACD;AACF,OALD;AAOAI,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACrD,cAAM;AACJC,UAAAA,MAAM,EAAE;AAAEC,YAAAA,QAAF;AAAYC,YAAAA;AAAZ;AADJ,YAEFH,QAFJ;AAGAI,QAAAA,KAAK,CACF,qEAAoEF,QAAS,cAAaC,SAAU,sBADlG,CAAL,CAGGE,IAHH,CAGSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAHjB,EAIGF,IAJH,CAISG,MAAD,IAAY;AAChBb,UAAAA,QAAQ,CAACC,MAAT,GAAmB,YAAWY,MAAM,CAACC,WAAY,KAAID,MAAM,CAACE,IAAK,WAAjE;AACD,SANH,EAOGC,KAPH,CAOSC,OAAO,CAACC,KAPjB;AAQD,OAZD;AAaD;;AAED,UAAMC,aAAa,GAAG,MAAM;AAC1B,eACEjC,qBAAqB,CAAC,MAAME,MAAM,CAACgC,OAAP,GAAiB,CAAxB,CADvB;AAED,KAHD;;AAKA,aACEhC,MAAM,CAACiC,gBAAP,CAAwB,QAAxB,EAAkCF,aAAlC,EAAiD;AAAEG,MAAAA,OAAO,EAAE;AAAX,KAAjD,CADF;AAEA,WAAO,MAAM;AACX,eACElC,MAAM,CAACmC,mBAAP,CAA2B,QAA3B,EAAqCJ,aAArC,CADF;AAED,KAHD;AAID,GApCQ,EAoCN,EApCM,CAAT;AAqCA,sBACE;AACE,IAAA,SAAS,EAAG,YAAWlC,cAAc,GAAG,kBAAH,GAAwB,EAAG,EADlE;AAEE,IAAA,OAAO,EAAEE,eAFX;AAAA,2BAIE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAlDD;;AAoDA,eAAeH,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ArrowSVG from '../../assets/svg/arrow.svg';\r\nimport { UTM_TAGS } from '../../constants/utmTags';\r\n\r\nconst ArrowUp: React.FC = () => {\r\n  const [isArrowVisible, changeArrowVisability] = useState(false);\r\n  const handleScrollTop = () =>\r\n    typeof window !== 'undefined' &&\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  useEffect(() => {\r\n    if (typeof window !== 'undefined') {\r\n      const urlParams = new URLSearchParams(window.location.search);\r\n      UTM_TAGS.forEach((tag) => {\r\n        const value = urlParams.get(tag);\r\n        if (value) {\r\n          document.cookie = `${tag}=${value}; path=/;`;\r\n        }\r\n      });\r\n\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        const {\r\n          coords: { latitude, longitude },\r\n        } = position;\r\n        fetch(\r\n          `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${latitude}&longitude=${longitude}&localityLanguage=en`\r\n        )\r\n          .then((res) => res.json())\r\n          .then((result) => {\r\n            document.cookie = `user_geo=${result.countryName}, ${result.city}; path=/;`;\r\n          })\r\n          .catch(console.error);\r\n      });\r\n    }\r\n\r\n    const scrollHandler = () => {\r\n      typeof window !== 'undefined' &&\r\n        changeArrowVisability(() => window.scrollY > 0);\r\n    };\r\n\r\n    typeof window !== 'undefined' &&\r\n      window.addEventListener('scroll', scrollHandler, { passive: true });\r\n    return () => {\r\n      typeof window !== 'undefined' &&\r\n        window.removeEventListener('scroll', scrollHandler);\r\n    };\r\n  }, []);\r\n  return (\r\n    <button\r\n      className={`arrow-up ${isArrowVisible ? 'arrow-up-visible' : ''}`}\r\n      onClick={handleScrollTop}\r\n    >\r\n      <ArrowSVG />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ArrowUp;\r\n"]},"metadata":{},"sourceType":"module"}