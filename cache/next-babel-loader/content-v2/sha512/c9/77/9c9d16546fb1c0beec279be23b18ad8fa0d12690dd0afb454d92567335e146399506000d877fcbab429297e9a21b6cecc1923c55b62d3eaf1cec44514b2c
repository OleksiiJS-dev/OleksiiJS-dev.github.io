{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useContext, useEffect, useRef, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport LanguageSelector from './LanguageSelector';\nimport Logo from './Logo';\nimport SearchInput from './SearchInput';\nimport Sublist from './Sublist';\nimport CartIcon from '../Cart/CartIcon';\nimport CurrencySelector from './CurrencySelector';\nimport { indexContext } from '../../context/cockpitContext';\nimport { TRANSLATE } from '../../constants/languages';\nimport { AboutListData, StoreListData } from '../../constants/header';\n\nconst DesktopHeader = () => {\n  const {\n    0: desktopMenuOpen,\n    1: setDesktopMenuOpen\n  } = useState(false);\n  const {\n    0: curMenu,\n    1: setCurMenu\n  } = useState('store');\n  const {\n    0: searchContainerOpen,\n    1: setSearchContainerOpen\n  } = useState(false);\n  const router = useRouter();\n  const {\n    locale\n  } = router;\n  const {\n    collectionsData,\n    hasStocks\n  } = useContext(indexContext);\n  const constantCollections = StoreListData[locale];\n  const collections = collectionsData.concat(constantCollections);\n  const menuRef = useRef(null);\n  const searchRef = useRef(null);\n\n  const changeCurMenu = menu => {\n    if (!desktopMenuOpen) setDesktopMenuOpen(true);else if (curMenu === menu) setDesktopMenuOpen(false);\n    setCurMenu(menu);\n  };\n\n  useEffect(() => {\n    const handleClickOutside = e => {\n      if (menuRef.current && !menuRef.current.contains(e.target) && desktopMenuOpen) {\n        setDesktopMenuOpen(false);\n      }\n\n      if (searchRef.current && (!searchRef.current.contains(e.target) || e.target.tagName.toLowerCase() === 'a') && searchContainerOpen) {\n        setSearchContainerOpen(false);\n      }\n    };\n\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [desktopMenuOpen, searchContainerOpen]);\n  useEffect(() => {\n    document.body.className = desktopMenuOpen || searchContainerOpen ? 'hide-overflow' : '';\n  }, [desktopMenuOpen, searchContainerOpen]);\n  return /*#__PURE__*/_jsx(\"header\", {\n    className: \"desktop-header\",\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"desktop-header__container container\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        ref: menuRef,\n        className: \"desktop-header__options\",\n        children: [/*#__PURE__*/_jsx(\"a\", {\n          className: \"desktop-header__options-option\",\n          role: \"presentation\",\n          onClick: () => changeCurMenu('store'),\n          children: TRANSLATE[locale].store\n        }), /*#__PURE__*/_jsx(\"a\", {\n          className: \"desktop-header__options-option\",\n          role: \"presentation\",\n          onClick: () => changeCurMenu('about'),\n          children: TRANSLATE[locale].aboutUs\n        }), /*#__PURE__*/_jsx(CurrencySelector, {}), /*#__PURE__*/_jsxs(\"div\", {\n          className: `desktop-header__desktop-menu ${desktopMenuOpen ? 'open' : ''}`,\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: `options-sublist ${curMenu === 'about' ? 'open' : ''}`,\n            children: /*#__PURE__*/_jsx(Sublist, {\n              data: AboutListData[locale],\n              closeMenu: () => setDesktopMenuOpen(false)\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: `options-sublist ${curMenu === 'store' ? 'open' : ''}`,\n            children: /*#__PURE__*/_jsx(Sublist, {\n              data: hasStocks ? collections : collections.filter(({\n                link\n              }) => link !== '/sales'),\n              closeMenu: () => setDesktopMenuOpen(false)\n            })\n          })]\n        })]\n      }), /*#__PURE__*/_jsx(Logo, {}), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"desktop-header__options\",\n        children: [/*#__PURE__*/_jsx(LanguageSelector, {}), /*#__PURE__*/_jsx(CartIcon, {}), /*#__PURE__*/_jsx(\"a\", {\n          className: \"desktop-header__options-option\",\n          role: \"presentation\",\n          onClick: () => setSearchContainerOpen(!searchContainerOpen),\n          children: TRANSLATE[locale].search\n        })]\n      }), /*#__PURE__*/_jsx(\"div\", {\n        ref: searchRef,\n        className: `desktop-header__search-container ${searchContainerOpen ? 'open' : ''}`,\n        children: /*#__PURE__*/_jsx(SearchInput, {\n          close: () => setSearchContainerOpen(false)\n        })\n      })]\n    })\n  });\n};\n\nexport default DesktopHeader;","map":null,"metadata":{},"sourceType":"module"}