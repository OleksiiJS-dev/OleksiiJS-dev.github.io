{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useContext, useEffect, useState } from 'react';\nimport App from 'next/app';\nimport NextNprogress from 'nextjs-progressbar';\nimport Header from '../src/components/Header/Header';\nimport Footer from '../src/components/Footer/Footer';\nimport ModalWindowStart from '../src/components/ModalWindowStart/ModalWindowStart';\nimport ArrowUp from '../src/components/ArrowUp/ArrowUp';\nimport { cartContext } from '../src/context/cartContext';\nimport { indexContext } from '../src/context/cockpitContext';\nimport { currencyContext } from '../src/context/currencyContext';\nimport { getCockpitCollection } from '../src/utils/getCockpitData';\nimport { getCurrencyRate } from '../src/utils/getCurrencyRate';\nimport '../styles/main.scss';\nimport '../styles/intlTelInput.css';\n\nconst MyApp = ({\n  Component,\n  pageProps,\n  props: {\n    collections,\n    runways,\n    hasStocks\n  }\n}) => {\n  const curCartContext = useContext(cartContext);\n  const {\n    0: cartState,\n    1: setCartState\n  } = useState(curCartContext ? curCartContext.cart : []);\n  const {\n    0: USDRate,\n    1: changeUSDRate\n  } = useState(0);\n  const {\n    0: currency,\n    1: setCurrency\n  } = useState('UAH');\n  const {\n    0: currencyRate,\n    1: setCurrencyRate\n  } = useState(0);\n\n  const addItemToCart = item => {\n    if (!('receiverName' in item)) {\n      const existingItem = cartState.filter(el => el.id === item.id && !('receiverName' in el) && JSON.stringify(el.details) === JSON.stringify(item.details));\n\n      if (existingItem.length) {\n        const newItem = existingItem[0];\n        cartState.forEach(el => {\n          if (el.id === newItem.id && JSON.stringify(el.details) === JSON.stringify(newItem.details)) el.amount += 1;\n        });\n        setCartState([...cartState]);\n        return;\n      }\n    }\n\n    setCartState([...cartState, item]);\n  };\n\n  const removeItemFromCart = item => {\n    if (!('receiverName' in item)) setCartState([...cartState.filter(el => !(el.id === item.id && JSON.stringify(el.details) === JSON.stringify(item.details)))]);else setCartState([...cartState.filter(el => el.id !== item.id)]);\n  };\n\n  const clearCart = () => setCartState([]);\n\n  useEffect(() => {\n    if (false) {\n      const storageCart = localStorage.getItem('cart');\n\n      if (storageCart) {\n        setCartState(JSON.parse(storageCart));\n      }\n\n      const storageCurrency = localStorage.getItem('currency');\n\n      if (storageCurrency) {\n        setCurrency(JSON.parse(storageCurrency));\n      }\n    }\n  }, []);\n  useEffect(() => {\n    if (!USDRate) getCurrencyRate('USD').then(res => changeUSDRate(+res));\n  }, []);\n  useEffect(() => {\n    if (false) {\n      localStorage.setItem('cart', JSON.stringify(cartState));\n      localStorage.setItem('currency', JSON.stringify(currency));\n    }\n  }, [cartState, currency]);\n  useEffect(() => {\n    getCurrencyRate(currency.toString()).then(res => {\n      if (currency.toString() === 'RUB') {\n        setCurrencyRate(() => 1 / 3);\n      } else {\n        setCurrencyRate(+res);\n      }\n    }).catch(err => console.error(err));\n  }, [currency]);\n  return /*#__PURE__*/_jsx(indexContext.Provider, {\n    value: {\n      collectionsData: collections,\n      runwaysData: runways,\n      hasStocks\n    },\n    children: /*#__PURE__*/_jsx(currencyContext.Provider, {\n      value: {\n        currency,\n        currencyRate,\n        setCurrency,\n        USDRate\n      },\n      children: /*#__PURE__*/_jsxs(cartContext.Provider, {\n        value: {\n          cart: cartState,\n          addItem: addItemToCart,\n          removeItem: removeItemFromCart,\n          clearCart: clearCart\n        },\n        children: [/*#__PURE__*/_jsx(\"noscript\", {\n          dangerouslySetInnerHTML: {\n            __html: `<iframe\n              src=\"https://www.googletagmanager.com/ns.html?id=GTM-5XP658M\"\n              height=\"0\"\n              width=\"0\"\n              style=\"display:none;visibility:hidden\"\n            ></iframe>`\n          }\n        }), /*#__PURE__*/_jsx(Header, {}), /*#__PURE__*/_jsx(ModalWindowStart, {}), /*#__PURE__*/_jsx(NextNprogress, {\n          color: \"#000\",\n          startPosition: 0.3,\n          stopDelayMs: 200,\n          height: 3\n        }), /*#__PURE__*/_jsx(\"main\", {\n          children: /*#__PURE__*/_jsx(Component, _objectSpread({}, pageProps))\n        }), /*#__PURE__*/_jsx(ArrowUp, {}), /*#__PURE__*/_jsx(Footer, {})]\n      })\n    })\n  });\n};\n\nMyApp.getInitialProps = async (appContext) => {\n  const appProps = await App.getInitialProps(appContext);\n  const {\n    locale,\n    defaultLocale\n  } = appContext.router;\n  const cockpitDataCollections = await getCockpitCollection('Collections', 'filter[inMenu]=true&sort[_o]=1');\n  const cockpitGoods = await getCockpitCollection('Goods');\n  const cockpitDataRunways = await getCockpitCollection('Runways', 'filter[inMenu]=true');\n  const stockGoods = cockpitGoods.entries.filter(({\n    stockPrice\n  }) => stockPrice);\n  const runways = cockpitDataRunways.entries.map(el => {\n    return {\n      title: locale === defaultLocale ? el.title : el.title_en,\n      link: '/blind-style' + el.link,\n      inMenu: el.inMenu\n    };\n  });\n  const collections = cockpitDataCollections.entries.map(el => {\n    return {\n      title: locale === defaultLocale ? el.title : el.title_en,\n      link: `/collections${el.link}`,\n      inMenu: el.inMenu,\n      _id: el._id\n    };\n  });\n  return _objectSpread(_objectSpread({}, appProps), {}, {\n    props: {\n      collections,\n      runways,\n      hasStocks: !!stockGoods.length\n    }\n  });\n};\n\nexport default MyApp;","map":null,"metadata":{},"sourceType":"module"}