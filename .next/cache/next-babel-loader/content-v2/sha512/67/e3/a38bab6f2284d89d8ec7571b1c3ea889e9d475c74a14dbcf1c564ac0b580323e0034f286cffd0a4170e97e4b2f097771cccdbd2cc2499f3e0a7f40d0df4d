{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\blind-blind\\\\src\\\\components\\\\ArrowUp\\\\ArrowUp.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ArrowSVG from '../../assets/svg/arrow.svg';\nimport { UTM_TAGS } from '../../constants/utmTags';\n\nvar ArrowUp = function ArrowUp() {\n  _s();\n\n  var _useState = useState(false),\n      isArrowVisible = _useState[0],\n      changeArrowVisability = _useState[1];\n\n  var handleScrollTop = function handleScrollTop() {\n    return true && window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n\n  useEffect(function () {\n    if (true) {\n      var urlParams = new URLSearchParams(window.location.search);\n      UTM_TAGS.forEach(function (tag) {\n        var value = urlParams.get(tag);\n\n        if (value) {\n          document.cookie = \"\".concat(tag, \"=\").concat(value, \"; path=/;\");\n        }\n      });\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var _position$coords = position.coords,\n            latitude = _position$coords.latitude,\n            longitude = _position$coords.longitude;\n        fetch(\"https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=\".concat(latitude, \"&longitude=\").concat(longitude, \"&localityLanguage=en\")).then(function (res) {\n          return res.json();\n        }).then(function (result) {\n          document.cookie = \"user_geo=\".concat(result.countryName, \", \").concat(result.city, \"; path=/;\");\n        })[\"catch\"](console.error);\n      });\n    }\n\n    var scrollHandler = function scrollHandler() {\n      true && changeArrowVisability(function () {\n        return window.scrollY > 0;\n      });\n    };\n\n    true && window.addEventListener('scroll', scrollHandler, {\n      passive: true\n    });\n    return function () {\n      true && window.removeEventListener('scroll', scrollHandler);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"arrow-up \".concat(isArrowVisible ? 'arrow-up-visible' : ''),\n    onClick: handleScrollTop,\n    children: /*#__PURE__*/_jsxDEV(ArrowSVG, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ArrowUp, \"nuMStbzbYdRzz8BCgtZ6+G96n2s=\");\n\n_c = ArrowUp;\nexport default ArrowUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArrowUp\");","map":{"version":3,"sources":["C:/Users/user/Documents/GitHub/blind-blind/src/components/ArrowUp/ArrowUp.tsx"],"names":["React","useState","useEffect","ArrowSVG","UTM_TAGS","ArrowUp","isArrowVisible","changeArrowVisability","handleScrollTop","window","scrollTo","top","behavior","urlParams","URLSearchParams","location","search","forEach","tag","value","get","document","cookie","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetch","then","res","json","result","countryName","city","console","error","scrollHandler","scrollY","addEventListener","passive","removeEventListener"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,QAAT,QAAyB,yBAAzB;;AAEA,IAAMC,OAAiB,GAAG,SAApBA,OAAoB,GAAM;AAAA;;AAAA,kBACkBJ,QAAQ,CAAC,KAAD,CAD1B;AAAA,MACvBK,cADuB;AAAA,MACPC,qBADO;;AAE9B,MAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,WACtB,QACAC,MAAM,CAACC,QAAP,CAAgB;AAAEC,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA,QAAQ,EAAE;AAApB,KAAhB,CAFsB;AAAA,GAAxB;;AAGAV,EAAAA,SAAS,CAAC,YAAM;AACd,cAAmC;AACjC,UAAMW,SAAS,GAAG,IAAIC,eAAJ,CAAoBL,MAAM,CAACM,QAAP,CAAgBC,MAApC,CAAlB;AACAZ,MAAAA,QAAQ,CAACa,OAAT,CAAiB,UAACC,GAAD,EAAS;AACxB,YAAMC,KAAK,GAAGN,SAAS,CAACO,GAAV,CAAcF,GAAd,CAAd;;AACA,YAAIC,KAAJ,EAAW;AACTE,UAAAA,QAAQ,CAACC,MAAT,aAAqBJ,GAArB,cAA4BC,KAA5B;AACD;AACF,OALD;AAOAI,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAACC,QAAD,EAAc;AAAA,+BAGjDA,QAHiD,CAEnDC,MAFmD;AAAA,YAEzCC,QAFyC,oBAEzCA,QAFyC;AAAA,YAE/BC,SAF+B,oBAE/BA,SAF+B;AAIrDC,QAAAA,KAAK,6EACkEF,QADlE,wBACwFC,SADxF,0BAAL,CAGGE,IAHH,CAGQ,UAACC,GAAD;AAAA,iBAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,SAHR,EAIGF,IAJH,CAIQ,UAACG,MAAD,EAAY;AAChBb,UAAAA,QAAQ,CAACC,MAAT,sBAA8BY,MAAM,CAACC,WAArC,eAAqDD,MAAM,CAACE,IAA5D;AACD,SANH,WAOSC,OAAO,CAACC,KAPjB;AAQD,OAZD;AAaD;;AAED,QAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,cACEhC,qBAAqB,CAAC;AAAA,eAAME,MAAM,CAAC+B,OAAP,GAAiB,CAAvB;AAAA,OAAD,CADvB;AAED,KAHD;;AAKA,YACE/B,MAAM,CAACgC,gBAAP,CAAwB,QAAxB,EAAkCF,aAAlC,EAAiD;AAAEG,MAAAA,OAAO,EAAE;AAAX,KAAjD,CADF;AAEA,WAAO,YAAM;AACX,cACEjC,MAAM,CAACkC,mBAAP,CAA2B,QAA3B,EAAqCJ,aAArC,CADF;AAED,KAHD;AAID,GApCQ,EAoCN,EApCM,CAAT;AAqCA,sBACE;AACE,IAAA,SAAS,qBAAcjC,cAAc,GAAG,kBAAH,GAAwB,EAApD,CADX;AAEE,IAAA,OAAO,EAAEE,eAFX;AAAA,2BAIE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CAlDD;;GAAMH,O;;KAAAA,O;AAoDN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ArrowSVG from '../../assets/svg/arrow.svg';\r\nimport { UTM_TAGS } from '../../constants/utmTags';\r\n\r\nconst ArrowUp: React.FC = () => {\r\n  const [isArrowVisible, changeArrowVisability] = useState(false);\r\n  const handleScrollTop = () =>\r\n    typeof window !== 'undefined' &&\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  useEffect(() => {\r\n    if (typeof window !== 'undefined') {\r\n      const urlParams = new URLSearchParams(window.location.search);\r\n      UTM_TAGS.forEach((tag) => {\r\n        const value = urlParams.get(tag);\r\n        if (value) {\r\n          document.cookie = `${tag}=${value}; path=/;`;\r\n        }\r\n      });\r\n\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        const {\r\n          coords: { latitude, longitude },\r\n        } = position;\r\n        fetch(\r\n          `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${latitude}&longitude=${longitude}&localityLanguage=en`\r\n        )\r\n          .then((res) => res.json())\r\n          .then((result) => {\r\n            document.cookie = `user_geo=${result.countryName}, ${result.city}; path=/;`;\r\n          })\r\n          .catch(console.error);\r\n      });\r\n    }\r\n\r\n    const scrollHandler = () => {\r\n      typeof window !== 'undefined' &&\r\n        changeArrowVisability(() => window.scrollY > 0);\r\n    };\r\n\r\n    typeof window !== 'undefined' &&\r\n      window.addEventListener('scroll', scrollHandler, { passive: true });\r\n    return () => {\r\n      typeof window !== 'undefined' &&\r\n        window.removeEventListener('scroll', scrollHandler);\r\n    };\r\n  }, []);\r\n  return (\r\n    <button\r\n      className={`arrow-up ${isArrowVisible ? 'arrow-up-visible' : ''}`}\r\n      onClick={handleScrollTop}\r\n    >\r\n      <ArrowSVG />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ArrowUp;\r\n"]},"metadata":{},"sourceType":"module"}