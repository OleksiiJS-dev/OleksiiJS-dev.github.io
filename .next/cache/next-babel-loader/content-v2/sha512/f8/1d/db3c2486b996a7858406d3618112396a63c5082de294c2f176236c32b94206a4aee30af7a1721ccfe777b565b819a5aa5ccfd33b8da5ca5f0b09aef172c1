{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\archivegit\\\\blind-blind\\\\src\\\\components\\\\Form\\\\Dropdown.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nvar Dropdown = function Dropdown(_ref) {\n  _s();\n\n  var value = _ref.value,\n      placeholder = _ref.placeholder,\n      values = _ref.values,\n      setValue = _ref.setValue;\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  useEffect(function () {\n    var outsideClick = function outsideClick() {\n      return setIsOpen(function () {\n        return false;\n      });\n    };\n\n    document && document.addEventListener('click', outsideClick, {\n      passive: true\n    });\n    return function () {\n      return document && document.removeEventListener('click', outsideClick);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown__value\",\n        role: \"presentation\",\n        onClick: function onClick(e) {\n          e.stopPropagation();\n          setIsOpen(!isOpen);\n        },\n        children: [value ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"value-label\",\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, _this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"placeholder\",\n          children: placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown__list \".concat(isOpen ? 'open' : ''),\n        children: values === null || values === void 0 ? void 0 : values.map(function (listItem) {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            role: \"presentation\",\n            onClick: function onClick() {\n              setValue(listItem);\n              setIsOpen(false);\n            },\n            children: listItem\n          }, listItem, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Dropdown, \"vl0Rt3/A8evyRPW1OQ1AhRk4UhU=\");\n\n_c = Dropdown;\nexport default Dropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"sources":["D:/archivegit/blind-blind/src/components/Form/Dropdown.tsx"],"names":["useState","useEffect","Dropdown","value","placeholder","values","setValue","isOpen","setIsOpen","outsideClick","document","addEventListener","passive","removeEventListener","e","stopPropagation","map","listItem"],"mappings":";;;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAGA,IAAMC,QAAkC,GAAG,SAArCA,QAAqC,OAKrC;AAAA;;AAAA,MAJJC,KAII,QAJJA,KAII;AAAA,MAHJC,WAGI,QAHJA,WAGI;AAAA,MAFJC,MAEI,QAFJA,MAEI;AAAA,MADJC,QACI,QADJA,QACI;;AAAA,kBACwBN,QAAQ,CAAC,KAAD,CADhC;AAAA,MACGO,MADH;AAAA,MACWC,SADX;;AAGJP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMQ,YAAY,GAAG,SAAfA,YAAe;AAAA,aAAMD,SAAS,CAAC;AAAA,eAAM,KAAN;AAAA,OAAD,CAAf;AAAA,KAArB;;AACAE,IAAAA,QAAQ,IACNA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCF,YAAnC,EAAiD;AAAEG,MAAAA,OAAO,EAAE;AAAX,KAAjD,CADF;AAEA,WAAO;AAAA,aACLF,QAAQ,IAAIA,QAAQ,CAACG,mBAAT,CAA6B,OAA7B,EAAsCJ,YAAtC,CADP;AAAA,KAAP;AAED,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,IAAI,EAAC,cAFP;AAGE,QAAA,OAAO,EAAE,iBAACK,CAAD,EAAO;AACdA,UAAAA,CAAC,CAACC,eAAF;AACAP,UAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,SANH;AAAA,mBAQGJ,KAAK,gBACJ;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA,oBAA4BA;AAA5B;AAAA;AAAA;AAAA;AAAA,iBADI,gBAGJ;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA,oBAA4BC;AAA5B;AAAA;AAAA;AAAA;AAAA,iBAXJ,eAaE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,iBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAgBE;AAAK,QAAA,SAAS,2BAAoBG,MAAM,GAAG,MAAH,GAAY,EAAtC,CAAd;AAAA,kBACGF,MADH,aACGA,MADH,uBACGA,MAAM,CAAEW,GAAR,CAAY,UAACC,QAAD;AAAA,8BACX;AAEE,YAAA,IAAI,EAAC,cAFP;AAGE,YAAA,OAAO,EAAE,mBAAM;AACbX,cAAAA,QAAQ,CAACW,QAAD,CAAR;AACAT,cAAAA,SAAS,CAAC,KAAD,CAAT;AACD,aANH;AAAA,sBAQGS;AARH,aACOA,QADP;AAAA;AAAA;AAAA;AAAA,mBADW;AAAA,SAAZ;AADH;AAAA;AAAA;AAAA;AAAA,eAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAmCD,CAnDD;;GAAMf,Q;;KAAAA,Q;AAqDN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { IDropdownProps } from './Types';\r\n\r\nconst Dropdown: React.FC<IDropdownProps> = ({\r\n  value,\r\n  placeholder,\r\n  values,\r\n  setValue,\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const outsideClick = () => setIsOpen(() => false);\r\n    document &&\r\n      document.addEventListener('click', outsideClick, { passive: true });\r\n    return () =>\r\n      document && document.removeEventListener('click', outsideClick);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"dropdown\">\r\n        <div\r\n          className=\"dropdown__value\"\r\n          role=\"presentation\"\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            setIsOpen(!isOpen);\r\n          }}\r\n        >\r\n          {value ? (\r\n            <p className=\"value-label\">{value}</p>\r\n          ) : (\r\n            <p className=\"placeholder\">{placeholder}</p>\r\n          )}\r\n          <div className=\"dropdown-button\" />\r\n        </div>\r\n        <div className={`dropdown__list ${isOpen ? 'open' : ''}`}>\r\n          {values?.map((listItem) => (\r\n            <p\r\n              key={listItem}\r\n              role=\"presentation\"\r\n              onClick={() => {\r\n                setValue(listItem);\r\n                setIsOpen(false);\r\n              }}\r\n            >\r\n              {listItem}\r\n            </p>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n"]},"metadata":{},"sourceType":"module"}