{"ast":null,"code":"import * as Yup from 'yup';\nimport 'yup/lib/Condition';\nimport { TRANSLATE } from './languages';\nexport const FORM = {\n  ru: {\n    cm: 'см',\n    tooSmall: 'cлишком малое значение',\n    tooLarge: 'cлишком большое значение',\n    required: 'обязательное поле',\n    wrongInput: 'неверное значение',\n    lettersRequired: 'некорректный ввод',\n    firstName: 'Имя',\n    lastName: 'Фамилия',\n    email: 'Электронная почта',\n    phone: '000000000',\n    country: 'Страна',\n    city: 'Город',\n    street: 'Улица',\n    house: 'Дом',\n    flat: 'Квартира',\n    paymentMethod: 'Способ оплаты',\n    paymentOnline: 'Оплата онлайн',\n    paymentManager: 'Оплата через менеджера',\n    novaPoshta: '\"Нова Пошта\"(по Украине)',\n    ukrPoshta: '\"Укр Пошта\"(за границу)',\n    courierNovaPoshta: 'Курьером \"Нова Пошта\"',\n    delivery: 'Доставка',\n    receiverName: 'Имя получателя',\n    receiverEmail: 'Почта получателя',\n    yourName: 'Ваше имя',\n    yourEmail: 'Ваша почта',\n    giftMessage: 'Сообщение (необязательно)',\n    giftAmount: 'Введите любую сумму сертификата',\n    warehouse: 'Отделение',\n    dob: 'Дата рождения',\n    russia: 'Извините, мы не доставляем наши товары в Россию'\n  },\n  en: {\n    cm: 'cm',\n    tooSmall: 'too small value',\n    tooLarge: 'too large value',\n    required: 'required',\n    wrongInput: 'wrong input',\n    lettersRequired: 'letters required',\n    firstName: 'First name',\n    lastName: 'Last name',\n    email: 'Email',\n    phone: '000000000',\n    country: 'Country',\n    city: 'City',\n    street: 'Street',\n    house: 'House',\n    flat: 'Flat',\n    paymentMethod: 'Payment method',\n    paymentOnline: 'Online payment',\n    delivery: 'Delivery',\n    paymentManager: 'Payment with manager',\n    novaPoshta: '\"Nova Poshta\"(in Ukraine)',\n    ukrPoshta: '\"Urk Poshta\"(abroad)',\n    courierNovaPoshta: 'Courier \"Nova Poshta\"',\n    receiverName: 'Receiver name',\n    receiverEmail: 'Receiver email',\n    yourName: 'Your name',\n    yourEmail: 'Your email',\n    giftMessage: 'Message (optional)',\n    giftAmount: 'Enter any amount of the certificate',\n    warehouse: 'Warehouse',\n    dob: 'Date of birth',\n    russia: \"Sorry, we don't deliver our goods to Russia\"\n  }\n};\nexport const FORMIK = {\n  shippingDiscount: {\n    values: {\n      code: ''\n    }\n  },\n  shippingMain: {\n    values: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      country: '',\n      city: '',\n      paymentMethod: '',\n      deliveryMethod: '',\n      warehouse: '',\n      street: '',\n      house: '',\n      flat: '',\n      checkbox: false\n    },\n    validationSchema: locale => Yup.object({\n      firstName: Yup.string().matches(/^[ a-zA-Zа-яА-Я]+$/, FORM[locale].lettersRequired).required(FORM[locale].required),\n      lastName: Yup.string().matches(/^[ a-zA-Zа-яА-Я]+$/, FORM[locale].lettersRequired).required(FORM[locale].required),\n      email: Yup.string().email(FORM[locale].wrongInput).required(FORM[locale].required),\n      phone: Yup.string().required(FORM[locale].required).min(11, FORM[locale].wrongInput).max(15, FORM[locale].wrongInput).typeError(FORM[locale].wrongInput),\n      country: Yup.string().matches(/^(?!russia|россия|рф|rf|российская\\sфедерация).*$/giu, FORM[locale].russia).required(FORM[locale].required),\n      city: Yup.string().required(FORM[locale].required),\n      paymentMethod: Yup.string().required(FORM[locale].required),\n      deliveryMethod: Yup.string().required(FORM[locale].required),\n      warehouse: Yup.string().when('deliveryMethod', {\n        is: FORM[locale].novaPoshta,\n        then: Yup.string().required(FORM[locale].required)\n      }),\n      street: Yup.string().when('deliveryMethod', {\n        is: FORM[locale].courierNovaPoshta,\n        then: Yup.string().required(FORM[locale].required)\n      }),\n      house: Yup.string().when('deliveryMethod', {\n        is: FORM[locale].courierNovaPoshta,\n        then: Yup.string().required(FORM[locale].required)\n      }),\n      flat: Yup.string()\n    }),\n    types: {\n      firstName: 'text',\n      lastName: 'text',\n      email: 'text',\n      phone: 'phone',\n      country: 'text',\n      city: 'text',\n      paymentMethod: 'select',\n      deliveryMethod: 'delivery',\n      warehouse: 'warehouse',\n      street: 'text',\n      house: 'text',\n      flat: 'text',\n      checkbox: 'checkbox'\n    },\n    selectOptions: locale => ({\n      paymentMethod: [FORM[locale].paymentOnline, FORM[locale].paymentManager]\n    }),\n    placeholders: locale => ({\n      firstName: FORM[locale].firstName,\n      lastName: FORM[locale].lastName,\n      email: FORM[locale].email,\n      phone: FORM[locale].phone,\n      country: FORM[locale].country,\n      city: FORM[locale].city,\n      street: FORM[locale].street,\n      house: FORM[locale].house,\n      flat: FORM[locale].flat,\n      paymentMethod: FORM[locale].paymentMethod,\n      deliveryMethod: FORM[locale].delivery,\n      warehouse: FORM[locale].warehouse\n    })\n  },\n  goodsExclusive: {\n    values: {\n      growth: '',\n      bust: '',\n      waist: '',\n      hips: ''\n    },\n    validationSchema: locale => Yup.object({\n      growth: Yup.number().min(100, FORM[locale].tooSmall).max(300, FORM[locale].tooLarge).required(FORM[locale].required).typeError(FORM[locale].wrongInput),\n      bust: Yup.number().min(20, FORM[locale].tooSmall).max(200, FORM[locale].tooLarge).required(FORM[locale].required).typeError(FORM[locale].wrongInput),\n      waist: Yup.number().min(20, FORM[locale].tooSmall).max(200, FORM[locale].tooLarge).required(FORM[locale].required).typeError(FORM[locale].wrongInput),\n      hips: Yup.number().min(20, FORM[locale].tooSmall).max(200, FORM[locale].tooLarge).required(FORM[locale].required).typeError(FORM[locale].wrongInput)\n    }),\n    types: {\n      growth: 'text',\n      bust: 'text',\n      waist: 'text',\n      hips: 'text'\n    },\n    suffixes: locale => ({\n      growth: TRANSLATE[locale].cm,\n      bust: TRANSLATE[locale].cm,\n      waist: TRANSLATE[locale].cm,\n      hips: TRANSLATE[locale].cm\n    }),\n    placeholders: locale => ({\n      growth: TRANSLATE[locale].growth,\n      bust: TRANSLATE[locale].bustVolume,\n      waist: TRANSLATE[locale].waistVolume,\n      hips: TRANSLATE[locale].hipsVolume\n    })\n  },\n  footerForm: {\n    values: {\n      phone: ''\n    },\n    validationSchema: locale => Yup.object({\n      phone: Yup.string().min(11, FORM[locale].wrongInput).max(15, FORM[locale].wrongInput).typeError(FORM[locale].wrongInput)\n    }),\n    types: {\n      phone: 'phone'\n    },\n    placeholders: locale => ({\n      phone: FORM[locale].phone\n    })\n  },\n  modalStartForm: {\n    values: {\n      firstName: '',\n      email: '',\n      phone: '',\n      dob: ''\n    },\n    validationSchema: locale => Yup.object({\n      firstName: Yup.string().matches(/^[ a-zA-Zа-яА-Я]+$/, FORM[locale].lettersRequired).typeError(FORM[locale].wrongInput).required(FORM[locale].required),\n      email: Yup.string().email().required(FORM[locale].required),\n      phone: Yup.string().required(FORM[locale].required).min(11, FORM[locale].wrongInput).max(15, FORM[locale].wrongInput).typeError(FORM[locale].wrongInput),\n      dob: Yup.date().required(FORM[locale].required).test('dob', FORM[locale].wrongInput, value => {\n        return value ? new Date().getFullYear() - (value === null || value === void 0 ? void 0 : value.getFullYear()) >= 10 : false;\n      })\n    }),\n    types: {\n      firstName: 'text',\n      email: 'text',\n      phone: 'phone',\n      dob: 'date'\n    },\n    placeholders: locale => ({\n      firstName: FORM[locale].firstName,\n      email: FORM[locale].email,\n      phone: FORM[locale].phone,\n      dob: FORM[locale].dob\n    })\n  },\n  voucher: {\n    values: {\n      receiverName: '',\n      receiverEmail: '',\n      yourName: '',\n      yourEmail: '',\n      message: '',\n      price: ''\n    },\n    validationSchema: locale => Yup.object({\n      receiverName: Yup.string().matches(/^[ a-zA-Zа-яА-Я]+$/, FORM[locale].lettersRequired).typeError(FORM[locale].wrongInput).required(FORM[locale].required),\n      receiverEmail: Yup.string().email().required(FORM[locale].required),\n      yourName: Yup.string().matches(/^[ a-zA-Zа-яА-Я]+$/, FORM[locale].lettersRequired).typeError(FORM[locale].wrongInput).required(FORM[locale].required),\n      yourEmail: Yup.string().email().required(FORM[locale].required),\n      price: Yup.number().min(1, FORM[locale].tooSmall).required(FORM[locale].required).typeError(FORM[locale].wrongInput)\n    }),\n    types: {\n      receiverName: 'text',\n      receiverEmail: 'text',\n      yourName: 'text',\n      yourEmail: 'text',\n      message: 'textArea',\n      price: 'text'\n    },\n    suffixes: {\n      price: 'UAH'\n    },\n    placeholders: locale => ({\n      receiverName: FORM[locale].receiverName,\n      receiverEmail: FORM[locale].receiverEmail,\n      yourName: FORM[locale].yourName,\n      yourEmail: FORM[locale].yourEmail,\n      message: FORM[locale].giftMessage,\n      price: FORM[locale].giftAmount\n    })\n  }\n};","map":null,"metadata":{},"sourceType":"module"}