{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useRef, useState } from 'react';\nimport useImage from '../../hooks/useImage';\n\nvar ZoomImage = function ZoomImage(_ref) {\n  var image = _ref.image,\n      alt = _ref.alt,\n      zoom = _ref.zoom;\n\n  var _useState = useState(false),\n      zoomed = _useState[0],\n      setZoomed = _useState[1];\n\n  var _useImage = useImage(),\n      img = _useImage.img,\n      isLoad = _useImage.isLoad,\n      onLoad = _useImage.onLoad;\n\n  var imageContainerRef = useRef(null);\n  useEffect(function () {\n    var changeImageTransformation = function changeImageTransformation(e) {\n      var _imageContainerRef$cu, _imageContainerRef$cu2;\n\n      var imageContainerProps = (_imageContainerRef$cu = imageContainerRef.current) === null || _imageContainerRef$cu === void 0 ? void 0 : _imageContainerRef$cu.getBoundingClientRect();\n      var imageElement = (_imageContainerRef$cu2 = imageContainerRef.current) === null || _imageContainerRef$cu2 === void 0 ? void 0 : _imageContainerRef$cu2.getElementsByClassName('image')[0];\n      var transforming = \"scale(\".concat(zoom, \")\");\n      var xbias = -((e.x - imageContainerProps.x) / imageContainerProps.width * 100 - 50);\n      var ybias = -((e.y - imageContainerProps.y) / imageContainerProps.height * 100 - 50);\n      imageElement.style.transform = \"translate(\".concat((Math.abs(xbias) > 50 ? Math.sign(xbias) * 50 : xbias) * (zoom - 1), \"%, \").concat((Math.abs(ybias) > 50 ? Math.sign(ybias) * 50 : ybias) * (zoom - 1), \"%) \") + transforming;\n    };\n\n    var handleMouseClick = function handleMouseClick(e) {\n      var _imageContainerRef$cu3;\n\n      var imageElement = (_imageContainerRef$cu3 = imageContainerRef.current) === null || _imageContainerRef$cu3 === void 0 ? void 0 : _imageContainerRef$cu3.getElementsByClassName('image')[0];\n      imageElement.style.transition = 'transform 0.1s ease-in';\n      imageElement.style.transform = '';\n\n      if (zoomed) {\n        setZoomed(false);\n      } else {\n        if (imageContainerRef.current && imageContainerRef.current.contains(e.target)) {\n          imageElement.style.transition = 'transform 0.1s ease-in';\n          setTimeout(function () {\n            imageElement.style.transition = '';\n          }, 100);\n          setZoomed(true);\n          changeImageTransformation(e);\n        }\n      }\n    };\n\n    var onMouseMove = function onMouseMove(e) {\n      if (zoomed) {\n        changeImageTransformation(e);\n      }\n    };\n\n    document.addEventListener('click', handleMouseClick);\n    document.addEventListener('mousemove', onMouseMove);\n    return function () {\n      document.removeEventListener('click', handleMouseClick);\n      document.removeEventListener('mousemove', onMouseMove);\n    };\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: imageContainerRef,\n    className: \"zoom-image \".concat(zoomed ? 'zoom' : ''),\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: \"zoom-image__preview \".concat(isLoad ? 'not-load' : 'load')\n    }), /*#__PURE__*/_jsx(\"img\", {\n      className: \"image\",\n      ref: img,\n      src: \"/_next/image?url=\".concat(process.env.NEXT_PUBLIC_COCKPIT_URL).concat(image, \"&w=1800&q=75\"),\n      alt: alt,\n      onLoad: onLoad\n    })]\n  });\n};\n\nexport default ZoomImage;","map":null,"metadata":{},"sourceType":"module"}