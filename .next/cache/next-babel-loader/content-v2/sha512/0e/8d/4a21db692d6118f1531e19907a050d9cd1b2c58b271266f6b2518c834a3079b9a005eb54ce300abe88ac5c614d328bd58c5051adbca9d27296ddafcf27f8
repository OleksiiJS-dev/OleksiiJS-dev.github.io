{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\archivegit\\\\blind-blind\\\\src\\\\components\\\\Form\\\\Form.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useMemo, useEffect, useState, useRef } from 'react';\nimport { useFormik } from 'formik';\nimport { useRouter } from 'next/router';\nimport InputMask from 'react-input-mask';\nimport intlTelInput from 'intl-tel-input';\nimport Fuse from 'fuse.js';\nimport Button from '../Button/Button';\nimport Dropdown from './Dropdown';\nimport { FORM } from '../../constants/form';\nimport warehouses from '../../../npWarehouses.json';\n\nvar Form = function Form(_ref) {\n  _s();\n\n  var formikConfig = _ref.formikConfig,\n      types = _ref.types,\n      selectOptions = _ref.selectOptions,\n      placeholders = _ref.placeholders,\n      suffixes = _ref.suffixes,\n      masks = _ref.masks,\n      checkboxText = _ref.checkboxText,\n      buttonTitle = _ref.buttonTitle,\n      optionFields = _ref.optionFields,\n      deliveryChangeHandler = _ref.deliveryChangeHandler;\n  var formik = useFormik(formikConfig);\n\n  var _useRouter = useRouter(),\n      locale = _useRouter.locale;\n\n  var phoneRef = useRef(null);\n\n  var _useState = useState(),\n      mask = _useState[0],\n      setMask = _useState[1];\n\n  useEffect(function () {\n    if (formik.values.phone !== undefined) {\n      setMask(intlTelInput(phoneRef.current, {\n        separateDialCode: true,\n        initialCountry: 'ua',\n        preferredCountries: ['ua', 'ru', 'kz', 'us', 'il', 'ae', 'by'],\n        excludeCountries: ['ru', 'by']\n      }));\n    }\n  }, [phoneRef]);\n  useEffect(function () {\n    formik.setValues(formikConfig.initialValues);\n  }, [formikConfig]);\n  var inputWarehouse = useMemo(function () {\n    var options = {\n      includeScore: true,\n      keys: ['settlement']\n    };\n    var fuse = new Fuse(warehouses, options);\n    var currentWarehouses = fuse.search(formik.values['city'] || '');\n\n    if (locale === 'en' || !currentWarehouses.length) {\n      var handleBlur = function handleBlur(e) {\n        e.target.value = e.target.value.trim();\n        formik.handleBlur(e);\n        formik.handleChange(e);\n      };\n\n      var InputText = function InputText(key) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: key,\n            name: key,\n            value: formik.values[key],\n            placeholder: placeholders[key],\n            onChange: formik.handleChange,\n            onBlur: handleBlur,\n            onFocus: function onFocus() {\n              return formik.touched[key] = undefined;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, _this), !!suffixes && suffixes[key] && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"input-suffix\",\n            children: suffixes[key]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, _this);\n      };\n\n      return InputText;\n    }\n\n    var InputField = function InputField(key) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-select\",\n        children: /*#__PURE__*/_jsxDEV(Dropdown, {\n          value: formik.values[key],\n          placeholder: placeholders[key],\n          values: currentWarehouses.map(function (_ref2) {\n            var address = _ref2.item.address;\n            return address;\n          }),\n          setValue: function setValue(item) {\n            return formik.setFieldValue(key, item);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, _this);\n    };\n\n    return InputField;\n  }, [formik, placeholders, locale]);\n  var inputText = useMemo(function () {\n    var handleBlur = function handleBlur(e) {\n      e.target.value = e.target.value.trim();\n      formik.handleBlur(e);\n      formik.handleChange(e);\n    };\n\n    var InputField = function InputField(key) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: key,\n          name: key,\n          value: formik.values[key],\n          placeholder: placeholders[key],\n          onChange: formik.handleChange,\n          onBlur: handleBlur,\n          onFocus: function onFocus() {\n            return formik.touched[key] = undefined;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, _this), !!suffixes && suffixes[key] && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"input-suffix\",\n          children: suffixes[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, _this);\n    };\n\n    return InputField;\n  }, [formik, placeholders, suffixes]);\n  var inputTextWithMask = useMemo(function () {\n    var InputField = function InputField(key) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-box\",\n        children: [/*#__PURE__*/_jsxDEV(InputMask, {\n          type: \"text\",\n          id: key,\n          name: key,\n          value: formik.values[key],\n          placeholder: placeholders[key],\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          onFocus: function onFocus() {\n            return formik.touched[key] = undefined;\n          },\n          mask: masks ? masks[key] : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, _this), !!suffixes && suffixes[key] && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"input-suffix\",\n          children: suffixes[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, _this);\n    };\n\n    return InputField;\n  }, [formik, masks, placeholders, suffixes]);\n  var inputTextArea = useMemo(function () {\n    var InputField = function InputField(key) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: key,\n          name: key,\n          value: formik.values[key],\n          placeholder: placeholders[key],\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          onFocus: function onFocus() {\n            return formik.touched[key] = undefined;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }, _this), !!suffixes && suffixes[key] && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"input-suffix\",\n          children: suffixes[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }, _this);\n    };\n\n    return InputField;\n  }, [formik, placeholders, suffixes]);\n  var inputCheckbox = useMemo(function () {\n    var InputField = function InputField(key) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-checkbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"checkbox\",\n          type: \"checkbox\",\n          id: key,\n          name: key,\n          value: formik.values[key],\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          onFocus: function onFocus() {\n            return formik.touched[key] = undefined;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-checkbox__label\",\n          htmlFor: key,\n          children: checkboxText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }, _this);\n    };\n\n    return InputField;\n  }, [formik, checkboxText]);\n  var inputDelivery = useMemo(function () {\n    function deliverySetValue(item, key) {\n      formik.setFieldValue(key, item);\n      if (deliveryChangeHandler) deliveryChangeHandler(item);\n    }\n\n    var InputField = function InputField(key) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-select\",\n        children: /*#__PURE__*/_jsxDEV(Dropdown, {\n          value: formik.values[key],\n          placeholder: placeholders[key],\n          values: [FORM[locale].novaPoshta, FORM[locale].ukrPoshta, FORM[locale].courierNovaPoshta],\n          setValue: function setValue(item) {\n            return deliverySetValue(item, key);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 7\n      }, _this);\n    };\n\n    return InputField;\n  }, [formik, placeholders, selectOptions]);\n  var inputSelect = useMemo(function () {\n    var InputField = function InputField(key) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-select\",\n        children: /*#__PURE__*/_jsxDEV(Dropdown, {\n          value: formik.values[key],\n          placeholder: placeholders[key],\n          values: selectOptions ? selectOptions[key] : [],\n          setValue: function setValue(item) {\n            return formik.setFieldValue(key, item);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 7\n      }, _this);\n    };\n\n    return InputField;\n  }, [formik, placeholders, selectOptions]);\n  var inputPhone = useMemo(function () {\n    var InputField = function InputField(key) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"phone-mask-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: key,\n            name: key,\n            ref: phoneRef,\n            value: formik.values[key],\n            placeholder: placeholders[key],\n            onChange: function onChange(e) {\n              if (e.target.value.length < 11 && e.target.value.match(/^\\d+$/) || e.target.value.match(/[+]\\d+$/) && e.target.value.length < 15) {\n                formik.handleChange(e);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 11\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 9\n        }, _this), !!suffixes && suffixes[key] && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"input-suffix\",\n          children: suffixes[key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 7\n      }, _this);\n    };\n\n    return InputField;\n  }, [formik, placeholders, suffixes]);\n  var inputDate = useMemo(function () {\n    var InputField = function InputField(key) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-date\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: key,\n          name: key,\n          value: formik.values[key],\n          placeholder: placeholders[key],\n          onChange: formik.handleChange,\n          onFocus: function onFocus(e) {\n            e.currentTarget.type = 'date';\n          },\n          onBlur: function onBlur(e) {\n            e.currentTarget.type = 'text';\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 7\n      }, _this);\n    };\n\n    return InputField;\n  }, [formik, placeholders, selectOptions]);\n\n  var renderField = function renderField(key, idx) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [types[key] !== 'text' || !masks || masks && !masks[key] ? InputTypes[types[key]](key) : InputTypes.maskedText(key), formik.errors[key] && formik.touched[key] && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: formik.errors[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, _this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, _this);\n  };\n\n  var InputTypes = {\n    text: inputText,\n    select: inputSelect,\n    checkbox: inputCheckbox,\n    phone: inputPhone,\n    maskedText: inputTextWithMask,\n    textArea: inputTextArea,\n    warehouse: inputWarehouse,\n    delivery: inputDelivery,\n    date: inputDate\n  };\n\n  var findOptionField = function findOptionField(key) {\n    return optionFields === null || optionFields === void 0 ? void 0 : optionFields.find(function (_ref3) {\n      var fieldName = _ref3.fieldName;\n      return key === fieldName;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n    },\n    children: [Object.keys(formik.values).map(function (key, idx) {\n      var optionField = findOptionField(key);\n\n      if ((optionField === null || optionField === void 0 ? void 0 : optionField.dependFieldValue) === formik.values[optionField === null || optionField === void 0 ? void 0 : optionField.dependFieldName] || !optionField) {\n        return renderField(key, idx);\n      }\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'button-container',\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        title: buttonTitle,\n        callback: function callback() {\n          if (formik.values.phone === undefined) return formik.handleSubmit();\n\n          if (formik.values.phone.length > 8 && formik.values.phone.length < 11) {\n            formik.values.phone = \"+\".concat(mask.getSelectedCountryData().dialCode).concat(formik.values.phone);\n          }\n\n          if (formik.values.phone.length < 15) formik.handleSubmit();\n        },\n        type: \"button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 302,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Form, \"O/9+LpceurjZ7UW5zvQexsua9Vo=\", false, function () {\n  return [useFormik, useRouter];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["D:/archivegit/blind-blind/src/components/Form/Form.tsx"],"names":["useMemo","useEffect","useState","useRef","useFormik","useRouter","InputMask","intlTelInput","Fuse","Button","Dropdown","FORM","warehouses","Form","formikConfig","types","selectOptions","placeholders","suffixes","masks","checkboxText","buttonTitle","optionFields","deliveryChangeHandler","formik","locale","phoneRef","mask","setMask","values","phone","undefined","current","separateDialCode","initialCountry","preferredCountries","excludeCountries","setValues","initialValues","inputWarehouse","options","includeScore","keys","fuse","currentWarehouses","search","length","handleBlur","e","target","value","trim","handleChange","InputText","key","touched","InputField","map","address","item","setFieldValue","inputText","inputTextWithMask","inputTextArea","inputCheckbox","inputDelivery","deliverySetValue","novaPoshta","ukrPoshta","courierNovaPoshta","inputSelect","inputPhone","match","inputDate","currentTarget","type","renderField","idx","InputTypes","maskedText","errors","text","select","checkbox","textArea","warehouse","delivery","date","findOptionField","find","fieldName","preventDefault","Object","optionField","dependFieldValue","dependFieldName","handleSubmit","getSelectedCountryData","dialCode"],"mappings":"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","sourcesContent":["import { FocusEventHandler, useMemo, useEffect, useState, useRef } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { useRouter } from 'next/router';\r\nimport InputMask from 'react-input-mask';\r\nimport intlTelInput from 'intl-tel-input';\r\nimport Fuse from 'fuse.js';\r\n\r\nimport Button from '../Button/Button';\r\nimport Dropdown from './Dropdown';\r\n\r\nimport { IFormProps } from './Types';\r\n\r\nimport { FORM } from '../../constants/form';\r\n\r\nimport warehouses from '../../../npWarehouses.json';\r\n\r\nconst Form: React.FC<IFormProps> = ({\r\n  formikConfig,\r\n  types,\r\n  selectOptions,\r\n  placeholders,\r\n  suffixes,\r\n  masks,\r\n  checkboxText,\r\n  buttonTitle,\r\n  optionFields,\r\n  deliveryChangeHandler,\r\n}) => {\r\n  const formik = useFormik(formikConfig);\r\n  const { locale } = useRouter();\r\n  const phoneRef = useRef<HTMLInputElement>(null);\r\n  const [mask, setMask] = useState<intlTelInput.Plugin>();\r\n\r\n  useEffect(() => {\r\n    if (formik.values.phone !== undefined) {\r\n      setMask(\r\n        intlTelInput(phoneRef.current!, {\r\n          separateDialCode: true,\r\n          initialCountry: 'ua',\r\n          preferredCountries: ['ua', 'ru', 'kz', 'us', 'il', 'ae', 'by'],\r\n          excludeCountries: ['ru', 'by']\r\n        })\r\n      );\r\n    }\r\n  }, [phoneRef]);\r\n  useEffect(() => {\r\n    formik.setValues(formikConfig.initialValues);\r\n  }, [formikConfig]);\r\n\r\n  const inputWarehouse = useMemo(() => {\r\n    const options = {\r\n      includeScore: true,\r\n      keys: ['settlement'],\r\n    };\r\n    const fuse = new Fuse(warehouses, options);\r\n    const currentWarehouses = fuse.search(formik.values['city'] || '');\r\n    if (locale === 'en' || !currentWarehouses.length) {\r\n      const handleBlur: FocusEventHandler<HTMLInputElement> = (e) => {\r\n        e.target.value = e.target.value.trim();\r\n        formik.handleBlur(e);\r\n        formik.handleChange(e);\r\n      };\r\n\r\n      const InputText = (key: string) => (\r\n        <div className=\"input-box\">\r\n          <input\r\n            type=\"text\"\r\n            id={key}\r\n            name={key}\r\n            value={formik.values[key]}\r\n            placeholder={placeholders[key]}\r\n            onChange={formik.handleChange}\r\n            onBlur={handleBlur}\r\n            onFocus={() => (formik.touched[key] = undefined)}\r\n          />\r\n          {!!suffixes && suffixes[key] && (\r\n            <span className=\"input-suffix\">{suffixes[key]}</span>\r\n          )}\r\n        </div>\r\n      );\r\n      return InputText;\r\n    }\r\n    const InputField = (key: string) => (\r\n      <div className=\"input-select\">\r\n        <Dropdown\r\n          value={formik.values[key]}\r\n          placeholder={placeholders[key]}\r\n          values={currentWarehouses.map(({ item: { address } }) => address)}\r\n          setValue={(item) => formik.setFieldValue(key, item)}\r\n        />\r\n      </div>\r\n    );\r\n    return InputField;\r\n  }, [formik, placeholders, locale]);\r\n\r\n  const inputText = useMemo(() => {\r\n    const handleBlur: FocusEventHandler<HTMLInputElement> = (e) => {\r\n      e.target.value = e.target.value.trim();\r\n      formik.handleBlur(e);\r\n      formik.handleChange(e);\r\n    };\r\n\r\n    const InputField = (key: string) => (\r\n      <div className=\"input-box\">\r\n        <input\r\n          type=\"text\"\r\n          id={key}\r\n          name={key}\r\n          value={formik.values[key]}\r\n          placeholder={placeholders[key]}\r\n          onChange={formik.handleChange}\r\n          onBlur={handleBlur}\r\n          onFocus={() => (formik.touched[key] = undefined)}\r\n        />\r\n        {!!suffixes && suffixes[key] && (\r\n          <span className=\"input-suffix\">{suffixes[key]}</span>\r\n        )}\r\n      </div>\r\n    );\r\n    return InputField;\r\n  }, [formik, placeholders, suffixes]);\r\n\r\n  const inputTextWithMask = useMemo(() => {\r\n    const InputField = (key: string) => (\r\n      <div className=\"input-box\">\r\n        <InputMask\r\n          type=\"text\"\r\n          id={key}\r\n          name={key}\r\n          value={formik.values[key]}\r\n          placeholder={placeholders[key]}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          onFocus={() => (formik.touched[key] = undefined)}\r\n          mask={masks ? masks[key] : ''}\r\n        />\r\n        {!!suffixes && suffixes[key] && (\r\n          <span className=\"input-suffix\">{suffixes[key]}</span>\r\n        )}\r\n      </div>\r\n    );\r\n    return InputField;\r\n  }, [formik, masks, placeholders, suffixes]);\r\n\r\n  const inputTextArea = useMemo(() => {\r\n    const InputField = (key: string) => (\r\n      <div className=\"input-area\">\r\n        <textarea\r\n          id={key}\r\n          name={key}\r\n          value={formik.values[key]}\r\n          placeholder={placeholders[key]}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          onFocus={() => (formik.touched[key] = undefined)}\r\n        />\r\n        {!!suffixes && suffixes[key] && (\r\n          <span className=\"input-suffix\">{suffixes[key]}</span>\r\n        )}\r\n      </div>\r\n    );\r\n    return InputField;\r\n  }, [formik, placeholders, suffixes]);\r\n\r\n  const inputCheckbox = useMemo(() => {\r\n    const InputField = (key: string) => (\r\n      <div className=\"input-checkbox\">\r\n        <input\r\n          className=\"checkbox\"\r\n          type=\"checkbox\"\r\n          id={key}\r\n          name={key}\r\n          value={formik.values[key]}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          onFocus={() => (formik.touched[key] = undefined)}\r\n        />\r\n        <label className=\"input-checkbox__label\" htmlFor={key}>\r\n          {checkboxText}\r\n        </label>\r\n      </div>\r\n    );\r\n    return InputField;\r\n  }, [formik, checkboxText]);\r\n\r\n  const inputDelivery = useMemo(() => {\r\n    function deliverySetValue(item: string, key: string) {\r\n      formik.setFieldValue(key, item);\r\n      if (deliveryChangeHandler) deliveryChangeHandler(item);\r\n    }\r\n    const InputField = (key: string) => (\r\n      <div className=\"input-select\">\r\n        <Dropdown\r\n          value={formik.values[key]}\r\n          placeholder={placeholders[key]}\r\n          values={[\r\n            FORM[locale as 'ru' | 'en'].novaPoshta,\r\n            FORM[locale as 'ru' | 'en'].ukrPoshta,\r\n            FORM[locale as 'ru' | 'en'].courierNovaPoshta,\r\n          ]}\r\n          setValue={(item) => deliverySetValue(item, key)}\r\n        />\r\n      </div>\r\n    );\r\n    return InputField;\r\n  }, [formik, placeholders, selectOptions]);\r\n\r\n  const inputSelect = useMemo(() => {\r\n    const InputField = (key: string) => (\r\n      <div className=\"input-select\">\r\n        <Dropdown\r\n          value={formik.values[key]}\r\n          placeholder={placeholders[key]}\r\n          values={selectOptions ? selectOptions[key] : []}\r\n          setValue={(item) => formik.setFieldValue(key, item)}\r\n        />\r\n      </div>\r\n    );\r\n    return InputField;\r\n  }, [formik, placeholders, selectOptions]);\r\n\r\n  const inputPhone = useMemo(() => {\r\n    const InputField = (key: string) => (\r\n      <div className=\"input-box\">\r\n        <div className=\"phone-mask-container\">\r\n          <input\r\n            type=\"text\"\r\n            id={key}\r\n            name={key}\r\n            ref={phoneRef}\r\n            value={formik.values[key]}\r\n            placeholder={placeholders[key]}\r\n            onChange={(e) => {\r\n              if (\r\n                (e.target.value.length < 11 && e.target.value.match(/^\\d+$/)) ||\r\n                (e.target.value.match(/[+]\\d+$/) && e.target.value.length < 15)\r\n              ) {\r\n                formik.handleChange(e);\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n        {!!suffixes && suffixes[key] && (\r\n          <span className=\"input-suffix\">{suffixes[key]}</span>\r\n        )}\r\n      </div>\r\n    );\r\n    return InputField;\r\n  }, [formik, placeholders, suffixes]);\r\n\r\n  const inputDate = useMemo(() => {\r\n    const InputField = (key: string) => (\r\n      <div className=\"input-date\">\r\n        <input\r\n          type=\"text\"\r\n          id={key}\r\n          name={key}\r\n          value={formik.values[key]}\r\n          placeholder={placeholders[key]}\r\n          onChange={formik.handleChange}\r\n          onFocus={(e) => {\r\n            e.currentTarget.type = 'date';\r\n          }}\r\n          onBlur={(e) => {\r\n            e.currentTarget.type = 'text';\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n    return InputField;\r\n  }, [formik, placeholders, selectOptions]);\r\n\r\n  const renderField = (key: string, idx: number) => {\r\n    return (\r\n      <div key={idx} className=\"form-row\">\r\n        {types[key] !== 'text' || !masks || (masks && !masks[key])\r\n          ? InputTypes[types[key]](key)\r\n          : InputTypes.maskedText(key)}\r\n        {formik.errors[key] && formik.touched[key] && (\r\n          <p className=\"error\">{formik.errors[key]}</p>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const InputTypes: { [key: string]: (key: string) => void } = {\r\n    text: inputText,\r\n    select: inputSelect,\r\n    checkbox: inputCheckbox,\r\n    phone: inputPhone,\r\n    maskedText: inputTextWithMask,\r\n    textArea: inputTextArea,\r\n    warehouse: inputWarehouse,\r\n    delivery: inputDelivery,\r\n    date: inputDate,\r\n  };\r\n\r\n  const findOptionField = (key: string) =>\r\n    optionFields?.find(({ fieldName }) => key === fieldName);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n      }}\r\n    >\r\n      {Object.keys(formik.values).map((key, idx) => {\r\n        const optionField = findOptionField(key);\r\n        if (\r\n          optionField?.dependFieldValue ===\r\n            formik.values[optionField?.dependFieldName as string] ||\r\n          !optionField\r\n        ) {\r\n          return renderField(key, idx);\r\n        }\r\n      })}\r\n      <div className={'button-container'}>\r\n        <Button\r\n          title={buttonTitle}\r\n          callback={() => {\r\n            if (formik.values.phone === undefined) return formik.handleSubmit();\r\n            if (\r\n              formik.values.phone.length > 8 &&\r\n              formik.values.phone.length < 11\r\n            ) {\r\n              formik.values.phone = `+${\r\n                mask!.getSelectedCountryData().dialCode\r\n              }${formik.values.phone}`;\r\n            }\r\n            if (formik.values.phone.length < 15) formik.handleSubmit();\r\n          }}\r\n          type=\"button\"\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}