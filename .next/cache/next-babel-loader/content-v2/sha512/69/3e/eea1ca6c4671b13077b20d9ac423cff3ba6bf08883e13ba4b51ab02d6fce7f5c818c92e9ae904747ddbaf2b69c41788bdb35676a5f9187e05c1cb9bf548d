{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Error from './_error';\nimport Seo from '../src/components/Seo/Seo';\nimport { getCockpitCollection } from '../src/utils/getCockpitData';\nimport { SEO_ITEMS, DEFAULT_DESCRIPTION } from '../src/constants/seoItems';\n\nconst SinglePage = ({\n  pageProps,\n  locale\n}) => {\n  if (!pageProps) return /*#__PURE__*/_jsx(Error, {});\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Seo, {\n      title: pageProps.title,\n      description: pageProps.seoDescription || DEFAULT_DESCRIPTION[locale],\n      breadcrumbs: [{\n        title: SEO_ITEMS[locale].indexPage.breadcrumbName,\n        link: SEO_ITEMS[locale].indexPage.link\n      }, {\n        title: pageProps.title,\n        link: pageProps.link\n      }],\n      lang: locale,\n      path: process.env.NEXT_PUBLIC_SITE_URL + pageProps.link\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"inform-page-container\",\n      dangerouslySetInnerHTML: {\n        __html: pageProps.content\n      }\n    })]\n  });\n};\n\nexport const getServerSideProps = async ({\n  locale,\n  defaultLocale,\n  query\n}) => {\n  const filter = `filter[link]=/${query.page}&populate=1`;\n  const pagesData = await getCockpitCollection('Pages', filter);\n  const curPage = pagesData.total ? pagesData.entries[0] : null;\n  const pageProps = curPage ? {\n    title: locale === defaultLocale ? curPage.title : curPage.title_en,\n    link: curPage.link,\n    content: locale === defaultLocale ? curPage.content : curPage.content_en,\n    seoDescription: locale === defaultLocale ? curPage.seoDescription : curPage.seoDescription_en\n  } : null;\n  return {\n    props: {\n      pageProps,\n      locale\n    }\n  };\n};\nexport default SinglePage;","map":null,"metadata":{},"sourceType":"module"}