{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\archivegit\\\\blind-blind\\\\src\\\\components\\\\Header\\\\SearchInput.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nimport { useEffect, useState } from 'react';\nimport Fuse from 'fuse.js';\nimport useCockpit from '../../hooks/useCockpit';\nimport GoodsSearchItem from '../Goods/GoodsSearchItem';\nimport { TRANSLATE } from '../../constants/languages';\n\nvar SearchInput = function SearchInput(_ref) {\n  _s();\n\n  var close = _ref.close;\n\n  var _useRouter = useRouter(),\n      locale = _useRouter.locale,\n      defaultLocale = _useRouter.defaultLocale;\n\n  var _useState = useState(''),\n      searchValue = _useState[0],\n      setSearchValue = _useState[1];\n\n  var _useState2 = useState([]),\n      foundGoods = _useState2[0],\n      setFoundGoods = _useState2[1];\n\n  var _useCockpit = useCockpit(false),\n      goods = _useCockpit.data;\n\n  var goodsList = goods === null || goods === void 0 ? void 0 : goods.entries;\n  var options = {\n    includeScore: true,\n    keys: ['title', 'title_en']\n  };\n  var fuse = new Fuse(goodsList, options);\n  useEffect(function () {\n    if (goodsList) setFoundGoods(fuse.search(searchValue).map(function (result) {\n      return result.item;\n    }));\n  }, [searchValue, goodsList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"search-input\",\n      value: searchValue,\n      placeholder: TRANSLATE[locale].search,\n      onChange: function onChange(e) {\n        return setSearchValue(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      role: \"presentation\",\n      onClick: function onClick() {\n        setSearchValue('');\n        close && close();\n      },\n      className: \"search-result-container\",\n      children: [searchValue && !foundGoods.length && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"not-found\",\n        children: [TRANSLATE[locale].goodsNotFound[0], \" \\\"\".concat(searchValue, \"\\\" \"), TRANSLATE[locale].goodsNotFound[1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, _this), foundGoods.map(function (_ref2) {\n        var _id = _ref2._id,\n            previewImage = _ref2.previewImage,\n            title = _ref2.title,\n            title_en = _ref2.title_en,\n            link = _ref2.link,\n            stockPrice = _ref2.stockPrice,\n            price = _ref2.price;\n        return /*#__PURE__*/_jsxDEV(GoodsSearchItem, {\n          photo: previewImage.path,\n          title: locale === defaultLocale ? title : title_en,\n          link: link,\n          price: stockPrice ? stockPrice : price\n        }, _id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(SearchInput, \"X3O57PC5lrLPXEzTMv+V+fDnsuc=\", false, function () {\n  return [useRouter, useCockpit];\n});\n\n_c = SearchInput;\nexport default SearchInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchInput\");","map":{"version":3,"sources":["D:/archivegit/blind-blind/src/components/Header/SearchInput.tsx"],"names":["useRouter","useEffect","useState","Fuse","useCockpit","GoodsSearchItem","TRANSLATE","SearchInput","close","locale","defaultLocale","searchValue","setSearchValue","foundGoods","setFoundGoods","goods","data","goodsList","entries","options","includeScore","keys","fuse","search","map","result","item","e","target","value","length","goodsNotFound","_id","previewImage","title","title_en","link","stockPrice","price","path"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router';\r\nimport { useEffect, useState } from 'react';\r\nimport Fuse from 'fuse.js';\r\n\r\nimport useCockpit from '../../hooks/useCockpit';\r\n\r\nimport GoodsSearchItem from '../Goods/GoodsSearchItem';\r\n\r\nimport { ICockpitGoodsEntries, ICockpitGoodsRaw } from '../../cockpitTypes';\r\nimport { ISearchInputProps } from './Types';\r\n\r\nimport { TRANSLATE } from '../../constants/languages';\r\n\r\nconst SearchInput: React.FC<ISearchInputProps> = ({ close }) => {\r\n  const { locale, defaultLocale } = useRouter();\r\n\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [foundGoods, setFoundGoods] = useState<ICockpitGoodsRaw[]>([]);\r\n\r\n  const { data: goods } = useCockpit<ICockpitGoodsEntries>(false);\r\n  const goodsList = goods?.entries as ICockpitGoodsRaw[];\r\n\r\n  const options = {\r\n    includeScore: true,\r\n    keys: ['title', 'title_en'],\r\n  };\r\n\r\n  const fuse = new Fuse(goodsList, options);\r\n\r\n  useEffect(() => {\r\n    if (goodsList)\r\n      setFoundGoods(fuse.search(searchValue).map((result) => result.item));\r\n  }, [searchValue, goodsList]);\r\n\r\n  return (\r\n    <div className=\"search-input-container\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"search-input\"\r\n        value={searchValue}\r\n        placeholder={TRANSLATE[locale as 'ru' | 'en'].search}\r\n        onChange={(e) => setSearchValue(e.target.value)}\r\n      />\r\n      <div\r\n        role=\"presentation\"\r\n        onClick={() => {\r\n          setSearchValue('');\r\n          close && close();\r\n        }}\r\n        className=\"search-result-container\"\r\n      >\r\n        {searchValue && !foundGoods.length && (\r\n          <p className=\"not-found\">\r\n            {TRANSLATE[locale as 'ru' | 'en'].goodsNotFound[0]}\r\n            {` \"${searchValue}\" `}\r\n            {TRANSLATE[locale as 'ru' | 'en'].goodsNotFound[1]}\r\n          </p>\r\n        )}\r\n        {foundGoods.map(\r\n          ({ _id, previewImage, title, title_en, link, stockPrice, price }) => (\r\n            <GoodsSearchItem\r\n              key={_id}\r\n              photo={previewImage.path}\r\n              title={locale === defaultLocale ? title : title_en}\r\n              link={link}\r\n              price={stockPrice ? stockPrice : price}\r\n            />\r\n          )\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n"]},"metadata":{},"sourceType":"module"}