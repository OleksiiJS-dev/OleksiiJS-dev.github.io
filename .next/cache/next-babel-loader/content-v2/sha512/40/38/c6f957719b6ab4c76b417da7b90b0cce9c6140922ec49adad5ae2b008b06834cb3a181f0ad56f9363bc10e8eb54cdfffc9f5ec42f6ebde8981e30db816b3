{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from 'react';\nimport ArrowSVG from '../../assets/svg/arrow.svg';\nimport { UTM_TAGS } from '../../constants/utmTags';\n\nconst ArrowUp = () => {\n  const {\n    0: isArrowVisible,\n    1: changeArrowVisability\n  } = useState(false);\n\n  const handleScrollTop = () => false && window.scrollTo({\n    top: 0,\n    behavior: 'smooth'\n  });\n\n  useEffect(() => {\n    if (false) {\n      const urlParams = new URLSearchParams(window.location.search);\n      UTM_TAGS.forEach(tag => {\n        const value = urlParams.get(tag);\n\n        if (value) {\n          document.cookie = `${tag}=${value}; path=/;`;\n        }\n      });\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          coords: {\n            latitude,\n            longitude\n          }\n        } = position;\n        fetch(`https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${latitude}&longitude=${longitude}&localityLanguage=en`).then(res => res.json()).then(result => {\n          document.cookie = `user_geo=${result.countryName}, ${result.city}; path=/;`;\n        }).catch(console.error);\n      });\n    }\n\n    const scrollHandler = () => {\n      false && changeArrowVisability(() => window.scrollY > 0);\n    };\n\n    false && window.addEventListener('scroll', scrollHandler, {\n      passive: true\n    });\n    return () => {\n      false && window.removeEventListener('scroll', scrollHandler);\n    };\n  }, []);\n  return /*#__PURE__*/_jsx(\"button\", {\n    className: `arrow-up ${isArrowVisible ? 'arrow-up-visible' : ''}`,\n    onClick: handleScrollTop,\n    children: /*#__PURE__*/_jsx(ArrowSVG, {})\n  });\n};\n\nexport default ArrowUp;","map":null,"metadata":{},"sourceType":"module"}