{"ast":null,"code":"import { createHash } from 'crypto';\n\nconst confimPayment = async (req, res) => {\n  const {\n    data,\n    signature\n  } = req.body;\n  const url = `${process.env.NEXT_PUBLIC_COCKPIT_URL}api/collections/save/checkouts`;\n  const check = data && signature;\n  if (!check) res.status(400).send({\n    message: 'Bad Request'\n  });\n  const sign = createHash('sha1').update(`${process.env.LIQPAY_PRIVATE_KEY}${data}${process.env.LIQPAY_PRIVATE_KEY}`).digest('base64');\n  if (sign !== signature) return res.status(401).send({\n    message: 'Invalid Signature'\n  });\n  const {\n    order_id,\n    status\n  } = JSON.parse(Buffer.from(data, 'base64').toString('utf-8'));\n  if (status === 'success') await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${process.env.NEXT_PUBLIC_COCKPIT_TOKEN}`\n    },\n    body: JSON.stringify({\n      data: {\n        _id: order_id,\n        isPaid: true\n      }\n    })\n  });\n  return res.status(200).send({\n    message: 'ok'\n  });\n};\n\nexport default confimPayment;","map":null,"metadata":{},"sourceType":"module"}