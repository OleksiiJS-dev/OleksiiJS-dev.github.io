{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useContext, useState, useRef, useEffect } from 'react';\nimport { currencyContext } from '../../context/currencyContext';\nimport { ECurrency } from '../../context/Types';\n\nconst CurrencySelector = () => {\n  const {\n    currency,\n    setCurrency\n  } = useContext(currencyContext);\n  const {\n    0: droplistOpen,\n    1: setDroplistOpen\n  } = useState(false);\n  const selector = useRef(null);\n\n  const handleClickOutside = e => {\n    var _selector$current;\n\n    if (!((_selector$current = selector.current) !== null && _selector$current !== void 0 && _selector$current.contains(e.target))) {\n      setDroplistOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"dropdown-selector\",\n    ref: selector,\n    children: [/*#__PURE__*/_jsx(\"p\", {\n      role: \"presentation\",\n      onClick: () => setDroplistOpen(!droplistOpen),\n      children: currency\n    }), droplistOpen && /*#__PURE__*/_jsx(\"div\", {\n      className: \"droplist\",\n      children: Object.keys(ECurrency).filter(curr => isNaN(Number(curr))).map(curr => /*#__PURE__*/_jsx(\"p\", {\n        role: \"presentation\",\n        onClick: () => {\n          setDroplistOpen(false);\n          setCurrency(curr);\n        },\n        children: curr\n      }, curr))\n    })]\n  });\n};\n\nexport default CurrencySelector;","map":null,"metadata":{},"sourceType":"module"}