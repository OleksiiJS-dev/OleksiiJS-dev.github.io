{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Error from '../../_error';\nimport GoodsList from '../../../src/components/Goods/GoodsList';\nimport GoodsListTitle from '../../../src/components/Goods/GoodsListTitle';\nimport Seo from '../../../src/components/Seo/Seo';\nimport { getCockpitCollection } from '../../../src/utils/getCockpitData';\nimport { SEO_ITEMS, DEFAULT_DESCRIPTION } from '../../../src/constants/seoItems';\nimport { LANGUAGES } from '../../../src/constants/languages';\n\nconst SubCollectionPage = ({\n  subCollectionProps,\n  locale,\n  goods,\n  categories\n}) => {\n  if (!subCollectionProps) {\n    return /*#__PURE__*/_jsx(Error, {});\n  }\n\n  const {\n    title,\n    description,\n    link\n  } = subCollectionProps;\n  const collectionLink = LANGUAGES[locale].path + '/collections' + subCollectionProps.collection.link;\n  const subCollectionLink = LANGUAGES[locale].path + '/collections' + '/subcollections' + link;\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"subcollection-page\",\n    children: [/*#__PURE__*/_jsx(Seo, {\n      title: title,\n      description: description || DEFAULT_DESCRIPTION[locale],\n      breadcrumbs: [{\n        title: SEO_ITEMS[locale].indexPage.breadcrumbName,\n        link: SEO_ITEMS[locale].indexPage.link\n      }, {\n        title: subCollectionProps.collection.title,\n        link: collectionLink\n      }, {\n        title: title,\n        link: subCollectionLink\n      }],\n      lang: locale,\n      path: process.env.NEXT_PUBLIC_SITE_URL + link\n    }), /*#__PURE__*/_jsx(GoodsListTitle, {\n      title: title\n    }), /*#__PURE__*/_jsx(GoodsList, {\n      goods: goods,\n      categories: categories\n    })]\n  });\n};\n\nexport const getServerSideProps = async ({\n  locale,\n  defaultLocale,\n  query: {\n    subcollection\n  }\n}) => {\n  const filter = 'filter[link]=/' + subcollection + '&populate=1';\n  const subCollections = await getCockpitCollection('SubCollections', filter);\n  const curSubCollection = subCollections.total ? subCollections.entries[0] : null;\n  const subCollectionProps = curSubCollection ? {\n    id: curSubCollection._id,\n    title: locale === defaultLocale ? curSubCollection.title : curSubCollection.title_en,\n    description: locale === defaultLocale ? curSubCollection.description : curSubCollection.description_en,\n    link: locale === defaultLocale ? curSubCollection.link : curSubCollection.link_en,\n    collection: {\n      link: locale === defaultLocale ? curSubCollection.collection.link : curSubCollection.collection.link_en,\n      title: locale === defaultLocale ? curSubCollection.collection.title : curSubCollection.collection.title_en\n    }\n  } : null;\n  const cockpitCategoriesData = await getCockpitCollection('Categories');\n  const goodsData = await getCockpitCollection('Goods', `filter[subCollection._id]=${curSubCollection._id}&sort[order]=-1`);\n  const goods = goodsData.entries.filter(({\n    isVisible\n  }) => isVisible !== false);\n  const categories = cockpitCategoriesData.entries.map(category => _objectSpread(_objectSpread({}, category), {}, {\n    title: locale === defaultLocale ? category.title : category.title_en\n  }));\n  return {\n    props: {\n      subCollectionProps,\n      locale,\n      categories,\n      goods: {\n        entries: goods\n      }\n    }\n  };\n};\nexport default SubCollectionPage;","map":null,"metadata":{},"sourceType":"module"}