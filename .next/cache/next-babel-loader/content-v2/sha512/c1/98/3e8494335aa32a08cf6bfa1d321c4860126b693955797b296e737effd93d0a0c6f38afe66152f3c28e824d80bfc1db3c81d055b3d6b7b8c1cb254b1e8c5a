{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\archivegit\\\\blind-blind\\\\src\\\\components\\\\Header\\\\CurrencySelector.tsx\";\nimport { useContext, useState, useRef, useEffect } from 'react';\nimport { currencyContext } from '../../context/currencyContext';\nimport { ECurrency } from '../../context/Types';\n\nconst CurrencySelector = () => {\n  const {\n    currency,\n    setCurrency\n  } = useContext(currencyContext);\n  const {\n    0: droplistOpen,\n    1: setDroplistOpen\n  } = useState(false);\n  const selector = useRef(null);\n\n  const handleClickOutside = e => {\n    var _selector$current;\n\n    if (!((_selector$current = selector.current) !== null && _selector$current !== void 0 && _selector$current.contains(e.target))) {\n      setDroplistOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown-selector\",\n    ref: selector,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      role: \"presentation\",\n      onClick: () => setDroplistOpen(!droplistOpen),\n      children: currency\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), droplistOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"droplist\",\n      children: Object.keys(ECurrency).filter(curr => isNaN(Number(curr))).map(curr => /*#__PURE__*/_jsxDEV(\"p\", {\n        role: \"presentation\",\n        onClick: () => {\n          setDroplistOpen(false);\n          setCurrency(curr);\n        },\n        children: curr\n      }, curr, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\nexport default CurrencySelector;","map":{"version":3,"sources":["D:/archivegit/blind-blind/src/components/Header/CurrencySelector.tsx"],"names":["useContext","useState","useRef","useEffect","currencyContext","ECurrency","CurrencySelector","currency","setCurrency","droplistOpen","setDroplistOpen","selector","handleClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","Object","keys","filter","curr","isNaN","Number","map"],"mappings":";;AAAA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,MAA/B,EAAuCC,SAAvC,QAAwD,OAAxD;AAEA,SAASC,eAAT,QAAgC,+BAAhC;AAEA,SAASC,SAAT,QAA4C,qBAA5C;;AAEA,MAAMC,gBAA0B,GAAG,MAAM;AACvC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BR,UAAU,CAC1CI,eAD0C,CAA5C;AAIA,QAAM;AAAA,OAACK,YAAD;AAAA,OAAeC;AAAf,MAAkCT,QAAQ,CAAU,KAAV,CAAhD;AACA,QAAMU,QAAQ,GAAGT,MAAM,CAAiB,IAAjB,CAAvB;;AAEA,QAAMU,kBAAkB,GAAIC,CAAD,IAAmB;AAAA;;AAC5C,QAAI,uBAACF,QAAQ,CAACG,OAAV,8CAAC,kBAAkBC,QAAlB,CAA2BF,CAAC,CAACG,MAA7B,CAAD,CAAJ,EAAmD;AACjDN,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF,GAJD;;AAMAP,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCN,kBAAnC;AAEA,WAAO,MAAM;AACXK,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsCP,kBAAtC;AACD,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAmC,IAAA,GAAG,EAAED,QAAxC;AAAA,4BACE;AAAG,MAAA,IAAI,EAAC,cAAR;AAAuB,MAAA,OAAO,EAAE,MAAMD,eAAe,CAAC,CAACD,YAAF,CAArD;AAAA,gBACGF;AADH;AAAA;AAAA;AAAA;AAAA,YADF,EAIGE,YAAY,iBACX;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACGW,MAAM,CAACC,IAAP,CAAYhB,SAAZ,EACEiB,MADF,CACUC,IAAD,IAAUC,KAAK,CAACC,MAAM,CAACF,IAAD,CAAP,CADxB,EAEEG,GAFF,CAEOH,IAAD,iBACH;AACE,QAAA,IAAI,EAAC,cADP;AAGE,QAAA,OAAO,EAAE,MAAM;AACbb,UAAAA,eAAe,CAAC,KAAD,CAAf;AACAF,UAAAA,WAAW,CAAEe,IAAF,CAAX;AACD,SANH;AAAA,kBAQGA;AARH,SAEOA,IAFP;AAAA;AAAA;AAAA;AAAA,cAHH;AADH;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA/CD;;AAiDA,eAAejB,gBAAf","sourcesContent":["import { useContext, useState, useRef, useEffect } from 'react';\r\n\r\nimport { currencyContext } from '../../context/currencyContext';\r\n\r\nimport { ECurrency, ICurrencyContext } from '../../context/Types';\r\n\r\nconst CurrencySelector: React.FC = () => {\r\n  const { currency, setCurrency } = useContext(\r\n    currencyContext\r\n  ) as ICurrencyContext;\r\n\r\n  const [droplistOpen, setDroplistOpen] = useState<boolean>(false);\r\n  const selector = useRef<HTMLDivElement>(null);\r\n\r\n  const handleClickOutside = (e: MouseEvent) => {\r\n    if (!selector.current?.contains(e.target as Node)) {\r\n      setDroplistOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dropdown-selector\" ref={selector}>\r\n      <p role=\"presentation\" onClick={() => setDroplistOpen(!droplistOpen)}>\r\n        {currency}\r\n      </p>\r\n      {droplistOpen && (\r\n        <div className=\"droplist\">\r\n          {Object.keys(ECurrency)\r\n            .filter((curr) => isNaN(Number(curr)))\r\n            .map((curr) => (\r\n              <p\r\n                role=\"presentation\"\r\n                key={curr}\r\n                onClick={() => {\r\n                  setDroplistOpen(false);\r\n                  setCurrency((curr as unknown) as ECurrency);\r\n                }}\r\n              >\r\n                {curr}\r\n              </p>\r\n            ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrencySelector;\r\n"]},"metadata":{},"sourceType":"module"}