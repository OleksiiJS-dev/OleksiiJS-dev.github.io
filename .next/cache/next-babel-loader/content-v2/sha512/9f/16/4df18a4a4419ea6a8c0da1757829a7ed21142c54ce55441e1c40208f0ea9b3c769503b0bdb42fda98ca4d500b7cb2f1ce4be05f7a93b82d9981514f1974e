{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\archivegit\\\\blind-blind\\\\src\\\\components\\\\Header\\\\LanguageSelector.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { LANGUAGES } from '../../constants/languages';\n\nvar LanguageSelector = function LanguageSelector() {\n  _s();\n\n  var router = useRouter();\n  var locale = router.locale,\n      locales = router.locales,\n      pathname = router.pathname,\n      asPath = router.asPath;\n\n  var _useState = useState(false),\n      droplistOpen = _useState[0],\n      setDroplistOpen = _useState[1];\n\n  var selector = useRef(null);\n\n  var handleClickOutside = function handleClickOutside(e) {\n    var _selector$current;\n\n    if (!((_selector$current = selector.current) !== null && _selector$current !== void 0 && _selector$current.contains(e.target))) {\n      setDroplistOpen(false);\n    }\n  };\n\n  useEffect(function () {\n    document.addEventListener('click', handleClickOutside);\n    return function () {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown-selector\",\n    ref: selector,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      role: \"presentation\",\n      onClick: function onClick() {\n        return setDroplistOpen(!droplistOpen);\n      },\n      children: LANGUAGES[locale].name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, _this), droplistOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"droplist\",\n      children: locales.map(function (el) {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          href: pathname,\n          as: asPath,\n          locale: el,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            role: \"presentation\",\n            onClick: function onClick() {\n              return setDroplistOpen(false);\n            },\n            children: LANGUAGES[el].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, _this)\n        }, el, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(LanguageSelector, \"vqCfugYgJeco6ybWqFzUFHqe8S0=\", false, function () {\n  return [useRouter];\n});\n\n_c = LanguageSelector;\nexport default LanguageSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguageSelector\");","map":{"version":3,"sources":["D:/archivegit/blind-blind/src/components/Header/LanguageSelector.tsx"],"names":["useState","useRef","useEffect","Link","useRouter","LANGUAGES","LanguageSelector","router","locale","locales","pathname","asPath","droplistOpen","setDroplistOpen","selector","handleClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","name","map","el"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,SAAT,QAA0B,2BAA1B;;AAEA,IAAMC,gBAA0B,GAAG,SAA7BA,gBAA6B,GAAM;AAAA;;AACvC,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AADuC,MAE/BI,MAF+B,GAEOD,MAFP,CAE/BC,MAF+B;AAAA,MAEvBC,OAFuB,GAEOF,MAFP,CAEvBE,OAFuB;AAAA,MAEdC,QAFc,GAEOH,MAFP,CAEdG,QAFc;AAAA,MAEJC,MAFI,GAEOJ,MAFP,CAEJI,MAFI;;AAAA,kBAICX,QAAQ,CAAU,KAAV,CAJT;AAAA,MAIhCY,YAJgC;AAAA,MAIlBC,eAJkB;;AAKvC,MAAMC,QAAQ,GAAGb,MAAM,CAAiB,IAAjB,CAAvB;;AAEA,MAAMc,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,CAAD,EAAmB;AAAA;;AAC5C,QAAI,uBAACF,QAAQ,CAACG,OAAV,8CAAC,kBAAkBC,QAAlB,CAA2BF,CAAC,CAACG,MAA7B,CAAD,CAAJ,EAAmD;AACjDN,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AACF,GAJD;;AAMAX,EAAAA,SAAS,CAAC,YAAM;AACdkB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCN,kBAAnC;AAEA,WAAO,YAAM;AACXK,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsCP,kBAAtC;AACD,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAmC,IAAA,GAAG,EAAED,QAAxC;AAAA,4BACE;AAAG,MAAA,IAAI,EAAC,cAAR;AAAuB,MAAA,OAAO,EAAE;AAAA,eAAMD,eAAe,CAAC,CAACD,YAAF,CAArB;AAAA,OAAhC;AAAA,gBACGP,SAAS,CAACG,MAAD,CAAT,CAAiCe;AADpC;AAAA;AAAA;AAAA;AAAA,aADF,EAIGX,YAAY,iBACX;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACIH,OAAD,CAAsBe,GAAtB,CAA0B,UAACC,EAAD;AAAA,4BACzB,QAAC,IAAD;AAAe,UAAA,IAAI,EAAEf,QAArB;AAA+B,UAAA,EAAE,EAAEC,MAAnC;AAA2C,UAAA,MAAM,EAAEc,EAAnD;AAAA,iCACE;AAAG,YAAA,IAAI,EAAC,cAAR;AAAuB,YAAA,OAAO,EAAE;AAAA,qBAAMZ,eAAe,CAAC,KAAD,CAArB;AAAA,aAAhC;AAAA,sBACGR,SAAS,CAACoB,EAAD,CAAT,CAA6BF;AADhC;AAAA;AAAA;AAAA;AAAA;AADF,WAAWE,EAAX;AAAA;AAAA;AAAA;AAAA,iBADyB;AAAA,OAA1B;AADH;AAAA;AAAA;AAAA;AAAA,aALJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAkBD,CAvCD;;GAAMnB,gB;UACWF,S;;;KADXE,gB;AAyCN,eAAeA,gBAAf","sourcesContent":["import { useState, useRef, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router';\r\n\r\nimport { LANGUAGES } from '../../constants/languages';\r\n\r\nconst LanguageSelector: React.FC = () => {\r\n  const router = useRouter();\r\n  const { locale, locales, pathname, asPath } = router;\r\n\r\n  const [droplistOpen, setDroplistOpen] = useState<boolean>(false);\r\n  const selector = useRef<HTMLDivElement>(null);\r\n\r\n  const handleClickOutside = (e: MouseEvent) => {\r\n    if (!selector.current?.contains(e.target as Node)) {\r\n      setDroplistOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dropdown-selector\" ref={selector}>\r\n      <p role=\"presentation\" onClick={() => setDroplistOpen(!droplistOpen)}>\r\n        {LANGUAGES[locale as 'ru' | 'en'].name}\r\n      </p>\r\n      {droplistOpen && (\r\n        <div className=\"droplist\">\r\n          {(locales as string[]).map((el) => (\r\n            <Link key={el} href={pathname} as={asPath} locale={el}>\r\n              <p role=\"presentation\" onClick={() => setDroplistOpen(false)}>\r\n                {LANGUAGES[el as 'ru' | 'en'].name}\r\n              </p>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LanguageSelector;\r\n"]},"metadata":{},"sourceType":"module"}